import com.sun.glass.events.KeyEvent;
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Malay Agarwal
 */
public class SearchMember extends javax.swing.JFrame {

       /**
        * Creates new form SearchMember
        */
       public SearchMember() {
              
              initComponents();
              
              SetIcon();
              
              this.model = (DefaultTableModel)ResultTable.getModel();
       }

       DefaultTableModel model = new DefaultTableModel();
       /**
        * This method is called from within the constructor to initialize the form.
        * WARNING: Do NOT modify this code. The content of this method is always
        * regenerated by the Form Editor.
        */
       @SuppressWarnings("unchecked")
       // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
       private void initComponents() {

              buttonGroup1 = new javax.swing.ButtonGroup();
              jScrollPane1 = new javax.swing.JScrollPane();
              ResultTable = new javax.swing.JTable();
              jLabel1 = new javax.swing.JLabel();
              SearchTermLabel = new javax.swing.JLabel();
              SearchTermBox = new javax.swing.JTextField();
              MemberNumberRadioButton = new javax.swing.JRadioButton();
              MemberNameRadioButton = new javax.swing.JRadioButton();
              BirthRadioButton = new javax.swing.JRadioButton();
              PhoneRadioButton = new javax.swing.JRadioButton();
              SortByLabel = new javax.swing.JLabel();
              SortByCombo = new javax.swing.JComboBox<>();
              SearchButton = new javax.swing.JButton();
              ClearButton = new javax.swing.JButton();
              MenuButton = new javax.swing.JButton();
              ExitButton = new javax.swing.JButton();
              jLabel2 = new javax.swing.JLabel();
              jLabel3 = new javax.swing.JLabel();
              jMenuBar4 = new javax.swing.JMenuBar();
              jMenu6 = new javax.swing.JMenu();
              AddBookMenuItem3 = new javax.swing.JMenuItem();
              AddMemberMenuItem2 = new javax.swing.JMenuItem();
              jSeparator19 = new javax.swing.JPopupMenu.Separator();
              IssueBookMenuItem2 = new javax.swing.JMenuItem();
              ReturnBookMenuItem2 = new javax.swing.JMenuItem();
              PurchaseBookMenuItem = new javax.swing.JMenuItem();
              jSeparator21 = new javax.swing.JPopupMenu.Separator();
              SearchBookMenuItem = new javax.swing.JMenuItem();
              jSeparator24 = new javax.swing.JPopupMenu.Separator();
              ViewIssuesMenuItem2 = new javax.swing.JMenuItem();
              ViewReturnsMenuItem2 = new javax.swing.JMenuItem();
              ViewPurchasesMenuItem2 = new javax.swing.JMenuItem();
              jSeparator22 = new javax.swing.JPopupMenu.Separator();
              DeleteBookMenuButton2 = new javax.swing.JMenuItem();
              DeleteMemberMenuItem2 = new javax.swing.JMenuItem();
              jSeparator2 = new javax.swing.JPopupMenu.Separator();
              EditBookMenuItem2 = new javax.swing.JMenuItem();
              EditMemberMenuItem2 = new javax.swing.JMenuItem();
              jSeparator25 = new javax.swing.JPopupMenu.Separator();
              ViewBooksMenuItem2 = new javax.swing.JMenuItem();
              ViewMembersMenuItem2 = new javax.swing.JMenuItem();
              jSeparator26 = new javax.swing.JPopupMenu.Separator();
              ExitMenuItem2 = new javax.swing.JMenuItem();
              HelpMenu = new javax.swing.JMenu();
              ShortcutsMenuItem = new javax.swing.JMenuItem();
              jSeparator27 = new javax.swing.JPopupMenu.Separator();
              AboutUsMenuItem = new javax.swing.JMenuItem();

              setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
              setTitle("Search for a member");
              setResizable(false);

              ResultTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ResultTable.setModel(new javax.swing.table.DefaultTableModel(
                     new Object [][] {

                     },
                     new String [] {
                            "Member Number", "Member Name", "Address", "Date of Birth", "Phone"
                     }
              ) {
                     boolean[] canEdit = new boolean [] {
                            false, false, false, false, false
                     };

                     public boolean isCellEditable(int rowIndex, int columnIndex) {
                            return canEdit [columnIndex];
                     }
              });
              jScrollPane1.setViewportView(ResultTable);

              jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
              jLabel1.setText("SEARCH FOR A MEMBER");

              SearchTermLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              SearchTermLabel.setText("Enter search term:");
              SearchTermLabel.setEnabled(false);

              SearchTermBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              SearchTermBox.setEnabled(false);
              SearchTermBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            SearchTermBoxKeyPressed(evt);
                     }
              });

              buttonGroup1.add(MemberNumberRadioButton);
              MemberNumberRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              MemberNumberRadioButton.setText("Search by member number.");
              MemberNumberRadioButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            MemberNumberRadioButtonActionPerformed(evt);
                     }
              });

              buttonGroup1.add(MemberNameRadioButton);
              MemberNameRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              MemberNameRadioButton.setText("Search by member name.");
              MemberNameRadioButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            MemberNameRadioButtonActionPerformed(evt);
                     }
              });

              buttonGroup1.add(BirthRadioButton);
              BirthRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BirthRadioButton.setText("Search by date of birth.");
              BirthRadioButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            BirthRadioButtonActionPerformed(evt);
                     }
              });

              buttonGroup1.add(PhoneRadioButton);
              PhoneRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PhoneRadioButton.setText("Search by phone number.");
              PhoneRadioButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            PhoneRadioButtonActionPerformed(evt);
                     }
              });

              SortByLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              SortByLabel.setText("Sort by:");

              SortByCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              SortByCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default (Member Number)", "Member Name", "Address", "Date of Birth", "Phone" }));
              SortByCombo.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SortByComboActionPerformed(evt);
                     }
              });
              SortByCombo.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            SortByComboKeyPressed(evt);
                     }
              });

              SearchButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              SearchButton.setText("Search");
              SearchButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SearchButtonActionPerformed(evt);
                     }
              });

              ClearButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ClearButton.setMnemonic('C');
              ClearButton.setText("Clear");
              ClearButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ClearButtonActionPerformed(evt);
                     }
              });

              MenuButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              MenuButton.setMnemonic('M');
              MenuButton.setText("Main menu");
              MenuButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            MenuButtonActionPerformed(evt);
                     }
              });

              ExitButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ExitButton.setText("Exit");
              ExitButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ExitButtonActionPerformed(evt);
                     }
              });

              jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              jLabel2.setText("After entering a value in the box, click on Search or press enter.");

              jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              jLabel3.setText("After selecting a sort criteria, click on Search or press enter.");

              jMenu6.setText("Quick Actions");
              jMenu6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

              AddBookMenuItem3.setText("Add a book");
              AddBookMenuItem3.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AddBookMenuItem3ActionPerformed(evt);
                     }
              });
              jMenu6.add(AddBookMenuItem3);

              AddMemberMenuItem2.setText("Add a member");
              AddMemberMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AddMemberMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu6.add(AddMemberMenuItem2);
              jMenu6.add(jSeparator19);

              IssueBookMenuItem2.setText("Issue a book");
              IssueBookMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            IssueBookMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu6.add(IssueBookMenuItem2);

              ReturnBookMenuItem2.setText("Return a book");
              ReturnBookMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ReturnBookMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu6.add(ReturnBookMenuItem2);

              PurchaseBookMenuItem.setText("Purchase a book");
              PurchaseBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            PurchaseBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu6.add(PurchaseBookMenuItem);
              jMenu6.add(jSeparator21);

              SearchBookMenuItem.setText("Search for a book");
              SearchBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SearchBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu6.add(SearchBookMenuItem);
              jMenu6.add(jSeparator24);

              ViewIssuesMenuItem2.setText("View issues");
              ViewIssuesMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewIssuesMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu6.add(ViewIssuesMenuItem2);

              ViewReturnsMenuItem2.setText("View returns");
              ViewReturnsMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewReturnsMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu6.add(ViewReturnsMenuItem2);

              ViewPurchasesMenuItem2.setText("View purchases");
              ViewPurchasesMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewPurchasesMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu6.add(ViewPurchasesMenuItem2);
              jMenu6.add(jSeparator22);

              DeleteBookMenuButton2.setText("Delete a book");
              DeleteBookMenuButton2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DeleteBookMenuButton2ActionPerformed(evt);
                     }
              });
              jMenu6.add(DeleteBookMenuButton2);

              DeleteMemberMenuItem2.setText("Delete a member");
              DeleteMemberMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DeleteMemberMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu6.add(DeleteMemberMenuItem2);
              jMenu6.add(jSeparator2);

              EditBookMenuItem2.setText("Edit information of a book");
              EditBookMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            EditBookMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu6.add(EditBookMenuItem2);

              EditMemberMenuItem2.setText("Edit information of a member");
              EditMemberMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            EditMemberMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu6.add(EditMemberMenuItem2);
              jMenu6.add(jSeparator25);

              ViewBooksMenuItem2.setText("View all books");
              ViewBooksMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewBooksMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu6.add(ViewBooksMenuItem2);

              ViewMembersMenuItem2.setText("View all members");
              ViewMembersMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewMembersMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu6.add(ViewMembersMenuItem2);
              jMenu6.add(jSeparator26);

              ExitMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              ExitMenuItem2.setText("Exit");
              ExitMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ExitMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu6.add(ExitMenuItem2);

              jMenuBar4.add(jMenu6);

              HelpMenu.setText("Help");
              HelpMenu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

              ShortcutsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              ShortcutsMenuItem.setText("Shortcuts");
              ShortcutsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ShortcutsMenuItemActionPerformed(evt);
                     }
              });
              HelpMenu.add(ShortcutsMenuItem);
              HelpMenu.add(jSeparator27);

              AboutUsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              AboutUsMenuItem.setText("About us");
              AboutUsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AboutUsMenuItemActionPerformed(evt);
                     }
              });
              HelpMenu.add(AboutUsMenuItem);

              jMenuBar4.add(HelpMenu);

              setJMenuBar(jMenuBar4);

              javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
              getContentPane().setLayout(layout);
              layout.setHorizontalGroup(
                     layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                            .addContainerGap(34, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                          .addComponent(jLabel1)
                                          .addGap(347, 347, 347))
                                   .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                 .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel3)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel2))
                                                 .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                               .addGroup(layout.createSequentialGroup()
                                                                      .addComponent(SearchTermLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                      .addGap(18, 18, 18)
                                                                      .addComponent(SearchTermBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                               .addGroup(layout.createSequentialGroup()
                                                                      .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                      .addGap(18, 18, 18)
                                                                      .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGap(18, 18, 18)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                               .addComponent(MenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                               .addComponent(SearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGap(18, 60, Short.MAX_VALUE)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                               .addGroup(layout.createSequentialGroup()
                                                                      .addComponent(SortByLabel)
                                                                      .addGap(18, 18, 18)
                                                                      .addComponent(SortByCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                               .addGroup(layout.createSequentialGroup()
                                                                      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                             .addComponent(BirthRadioButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                             .addComponent(MemberNumberRadioButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                      .addGap(18, 18, 18)
                                                                      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                             .addComponent(MemberNameRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                             .addComponent(PhoneRadioButton))))
                                                        .addGap(84, 84, 84))
                                                 .addComponent(jScrollPane1))
                                          .addGap(34, 34, 34))))
              );
              layout.setVerticalGroup(
                     layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1)
                            .addGap(11, 11, 11)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(SearchTermLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(SearchTermBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(MemberNumberRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(MemberNameRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(BirthRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(PhoneRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(MenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(SortByLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                                   .addComponent(SortByCombo))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(jLabel2)
                                   .addComponent(jLabel3))
                            .addGap(4, 4, 4))
              );

              pack();
       }// </editor-fold>//GEN-END:initComponents

       private void SortByComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByComboActionPerformed
              JComboBox cb = (JComboBox)evt.getSource();
              
              SearchTermBox.requestFocusInWindow();
              
              if (cb.getSelectedIndex() != -1 && !SearchTermBox.getText().equals("")){
                     
                     SearchButton.doClick();
              }
       }//GEN-LAST:event_SortByComboActionPerformed

       private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
              model.setRowCount(0);
              
              int index = SortByCombo.getSelectedIndex();
              int c = 0;
              
              try{
                     
                     Class.forName("com.mysql.jdbc.Driver");
                     Connection con = DriverManager.getConnection("jdbc:mysql://localhost/library", "root", "password");
                     
                     Statement stmt = con.createStatement();
                     
                     String query = "";
                     
                     if (SearchTermBox.isEnabled() && !SearchTermBox.getText().equals("")){
                            
                            if (MemberNumberRadioButton.isSelected()){
                                   
                                   switch (index){
                                          
                                          case 0:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where memberNo = " + SearchTermBox.getText() + " order by memberNo;";
                                                 break;
                                                 
                                          case 1:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where memberNo = " + SearchTermBox.getText() + " order by memberName;";
                                                 break;
                                                 
                                          case 2:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where memberNo = " + SearchTermBox.getText() + " order by address;";
                                                 break;
                                                 
                                          case 3:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where memberNo = " + SearchTermBox.getText() + " order by dob;";
                                                 break;
                                                 
                                          default:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where memberNo = " + SearchTermBox.getText() + " order by phone;";
                                                 break;
                                   }
                                   
                                   ResultSet rs = stmt.executeQuery(query);
                            
                                   while (rs.next()){
                                   
                                          c = 1;
                                          model.addRow(new Object[] {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)});
                                   }
                            
                                   if (c != 1){
                                   
                                          JOptionPane.showMessageDialog(null, "No member matched the search criteria.");
                                   }
                                   
                            }
                            else if (MemberNameRadioButton.isSelected()){
                                   
                                   switch (index){
                                          
                                          case 0:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where memberName like '%%" + SearchTermBox.getText() + "%%' order by memberNo;";
                                                 break;
                                                 
                                          case 1:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where memberName like '%%" + SearchTermBox.getText() + "%%' order by memberName;";
                                                 break;
                                                 
                                          case 2:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where memberName like '%%" + SearchTermBox.getText() + "%%' order by address;";
                                                 break;
                                                 
                                          case 3:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where memberName like '%%" + SearchTermBox.getText() + "%%' order by dob;";
                                                 break;
                                                 
                                          default:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where memberName like '%%" + SearchTermBox.getText() + "%%' order by phone;";
                                                 break;
                                   }
                                   
                                   ResultSet rs = stmt.executeQuery(query);
                            
                                   while (rs.next()){
                                   
                                          c = 1;
                                          model.addRow(new Object[] {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)});
                                   }
                            
                                   if (c != 1){
                                   
                                          JOptionPane.showMessageDialog(null, "No member matched the search criteria.");
                                   }
                            }
                            else if (BirthRadioButton.isSelected()){
                                   
                                   String dob = SearchTermBox.getText().substring(6, 10) + "-" + SearchTermBox.getText().substring(3, 5) + "-" + SearchTermBox.getText().substring(0, 2);
                                   switch (index){
                                          
                                          case 0:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where dob = '" + dob + "' order by memberNo;";
                                                 break;
                                                 
                                          case 1:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where dob = '" + dob + "' order by memberName;";
                                                 break;
                                                 
                                          case 2:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where dob = '" + dob + "' order by address;";
                                                 break;
                                                 
                                          case 3:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where dob = '" + dob + "' order by dob;";
                                                 break;
                                                 
                                          default:
                                                 query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where dob = '" + dob + "' order by phone;";
                                                 break;
                                   }
                                   
                                   ResultSet rs = stmt.executeQuery(query);
                            
                                   while (rs.next()){
                                   
                                          c = 1;
                                          model.addRow(new Object[] {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)});
                                   }
                            
                                   if (c != 1){
                                   
                                          JOptionPane.showMessageDialog(null, "No member matched the search criteria.");
                                   }
                            }
                            else{
                                   
                                   if (SearchTermBox.getText().length() == 10){
                                          
                                          switch (index){
                                                 
                                                 case 0:
                                                        query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where phone = '" + SearchTermBox.getText() + "' order by memberNo;";
                                                        break;
                                                        
                                                 case 1:
                                                        query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where phone = '" + SearchTermBox.getText() + "' order by memberName;";
                                                        break;
                                                        
                                                 case 2:
                                                        query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where phone = '" + SearchTermBox.getText() + "' order by address;";
                                                        break;
                                                        
                                                 case 3:
                                                        query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where phone = '" + SearchTermBox.getText() + "' order by dob;";
                                                        break;
                                                        
                                                 default:
                                                        query = "select memberNo, memberName, address, DATE_FORMAT(dob, '%d-%m-%Y'), phone from members where phone = '" + SearchTermBox.getText() + "' order by phone;";
                                                        break;
                                          }
                                          
                                          ResultSet rs = stmt.executeQuery(query);
                            
                                          while (rs.next()){
                                   
                                                 c = 1;
                                                 model.addRow(new Object[] {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)});
                                          }
                            
                                          if (c != 1){
                                   
                                                 JOptionPane.showMessageDialog(null, "No member matched the search criteria.");
                                          }
                                   }
                                   else{
                                          
                                          JOptionPane.showMessageDialog(null, "The phone number entered does not have 10 digits.");
                                   }
                            }
                     }
                     else{
                            
                            if (!MemberNameRadioButton.isSelected() && !MemberNumberRadioButton.isSelected() && !PhoneRadioButton.isSelected() && !BirthRadioButton.isSelected()){
                                   
                                   JOptionPane.showMessageDialog(null, "Please select a radio button.");
                            }
                            else{
                                   
                                   JOptionPane.showMessageDialog(null, "Please enter a value in the box.");
                            }
                     }
                     
                     stmt.close();
                     con.close();
              }
              catch(Exception e){
                     
                     JOptionPane.showMessageDialog(null, "A database connection error occured.");
              }
       }//GEN-LAST:event_SearchButtonActionPerformed

       private void MemberNumberRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberNumberRadioButtonActionPerformed
              JRadioButton rb = (JRadioButton)evt.getSource();
              
              if (rb.isSelected()){
                     
                     SearchTermLabel.setEnabled(true);
                     SearchTermBox.setEnabled(true);
                     
                     SearchTermBox.setText("");
                     
                     SearchTermBox.requestFocusInWindow();
                     
                     model.setRowCount(0);
                     
                     SortByCombo.setSelectedIndex(5);
              }
       }//GEN-LAST:event_MemberNumberRadioButtonActionPerformed

       private void MemberNameRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberNameRadioButtonActionPerformed
              JRadioButton rb = (JRadioButton)evt.getSource();
              
              if (rb.isSelected()){
                     
                     SearchTermLabel.setEnabled(true);
                     SearchTermBox.setEnabled(true);
                     
                     SearchTermBox.setText("");
                     
                     SearchTermBox.requestFocusInWindow();
                     
                     model.setRowCount(0);
                     
                     SortByCombo.setSelectedIndex(5);
              }
       }//GEN-LAST:event_MemberNameRadioButtonActionPerformed

       private void BirthRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BirthRadioButtonActionPerformed
              JRadioButton rb = (JRadioButton)evt.getSource();
              
              if (rb.isSelected()){
                     
                     SearchTermLabel.setEnabled(true);
                     SearchTermBox.setEnabled(true);
                     
                     SearchTermBox.setText("");
                     
                     SearchTermBox.requestFocusInWindow();
                     
                     model.setRowCount(0);
                     
                     SortByCombo.setSelectedIndex(0);
              }
       }//GEN-LAST:event_BirthRadioButtonActionPerformed

       private void PhoneRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhoneRadioButtonActionPerformed
              JRadioButton rb = (JRadioButton)evt.getSource();
              
              if (rb.isSelected()){
                     
                     SearchTermLabel.setEnabled(true);
                     SearchTermBox.setEnabled(true);
                     
                     SearchTermBox.setText("");
                     
                     SearchTermBox.requestFocusInWindow();
                     
                     model.setRowCount(0);
                     
                     SortByCombo.setSelectedIndex(0);
              }
       }//GEN-LAST:event_PhoneRadioButtonActionPerformed

       private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
              SearchTermLabel.setEnabled(false);
              SearchTermBox.setEnabled(false);
                     
              SearchTermBox.setText("");
                     
              SearchTermBox.requestFocusInWindow();
                     
              model.setRowCount(0);
                     
              SortByCombo.setSelectedIndex(0);
              
              buttonGroup1.clearSelection();
       }//GEN-LAST:event_ClearButtonActionPerformed

       private void SearchTermBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchTermBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     SearchButton.doClick();
              }
       }//GEN-LAST:event_SearchTermBoxKeyPressed

       private void SortByComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SortByComboKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     SearchButton.doClick();
              }
       }//GEN-LAST:event_SortByComboKeyPressed

       private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
              System.exit(0);
       }//GEN-LAST:event_ExitButtonActionPerformed

       private void MenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuButtonActionPerformed
              this.setVisible(false);
              MainPage page = new MainPage();
              page.setVisible(true);
       }//GEN-LAST:event_MenuButtonActionPerformed

       private void AddBookMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookMenuItem3ActionPerformed
              this.setVisible(false);
              AddBook books = new AddBook();
              books.setVisible(true);
       }//GEN-LAST:event_AddBookMenuItem3ActionPerformed

       private void AddMemberMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMemberMenuItem2ActionPerformed
              this.setVisible(false);
              AddMember member = new AddMember();
              member.setVisible(true);
       }//GEN-LAST:event_AddMemberMenuItem2ActionPerformed

       private void IssueBookMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueBookMenuItem2ActionPerformed
              this.setVisible(false);
              IssueBook issues = new IssueBook();
              issues.setVisible(true);
       }//GEN-LAST:event_IssueBookMenuItem2ActionPerformed

       private void ReturnBookMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnBookMenuItem2ActionPerformed
              this.setVisible(false);
              ReturnBook returns = new ReturnBook();
              returns.setVisible(true);
       }//GEN-LAST:event_ReturnBookMenuItem2ActionPerformed

       private void ViewIssuesMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewIssuesMenuItem2ActionPerformed
              this.setVisible(false);
              ViewIssues issues = new ViewIssues();
              issues.setVisible(true);
       }//GEN-LAST:event_ViewIssuesMenuItem2ActionPerformed

       private void ViewReturnsMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReturnsMenuItem2ActionPerformed
              this.setVisible(false);
              ViewReturns returns = new ViewReturns();
              returns.setVisible(true);
       }//GEN-LAST:event_ViewReturnsMenuItem2ActionPerformed

       private void ViewPurchasesMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewPurchasesMenuItem2ActionPerformed
              this.setVisible(false);
              ViewPurchases purchase = new ViewPurchases();
              purchase.setVisible(true);
       }//GEN-LAST:event_ViewPurchasesMenuItem2ActionPerformed

       private void DeleteBookMenuButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBookMenuButton2ActionPerformed
              this.setVisible(false);
              DeleteBook deleteBook = new DeleteBook();
              deleteBook.setVisible(true);
       }//GEN-LAST:event_DeleteBookMenuButton2ActionPerformed

       private void DeleteMemberMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteMemberMenuItem2ActionPerformed
              this.setVisible(false);
              DeleteMember deleteMember = new DeleteMember();
              deleteMember.setVisible(true);
       }//GEN-LAST:event_DeleteMemberMenuItem2ActionPerformed

       private void EditBookMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBookMenuItem2ActionPerformed
              this.setVisible(false);
              new EditBook().setVisible(true);
       }//GEN-LAST:event_EditBookMenuItem2ActionPerformed

       private void EditMemberMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditMemberMenuItem2ActionPerformed
              this.setVisible(false);
              new EditMember().setVisible(true);
       }//GEN-LAST:event_EditMemberMenuItem2ActionPerformed

       private void ViewBooksMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBooksMenuItem2ActionPerformed
              this.setVisible(false);
              new ViewBooks().setVisible(true);
       }//GEN-LAST:event_ViewBooksMenuItem2ActionPerformed

       private void ViewMembersMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewMembersMenuItem2ActionPerformed
              this.setVisible(false);
              new ViewMembers().setVisible(true);
       }//GEN-LAST:event_ViewMembersMenuItem2ActionPerformed

       private void ExitMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuItem2ActionPerformed
              System.exit(0);
       }//GEN-LAST:event_ExitMenuItem2ActionPerformed

       private void SearchBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBookMenuItemActionPerformed
              this.setVisible(false);
              SearchBook search = new SearchBook();
              search.setVisible(true);
       }//GEN-LAST:event_SearchBookMenuItemActionPerformed

       private void PurchaseBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseBookMenuItemActionPerformed
              this.setVisible(false);
              PurchaseBook purchase = new PurchaseBook();
              purchase.setVisible(true);
       }//GEN-LAST:event_PurchaseBookMenuItemActionPerformed

       private void ShortcutsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShortcutsMenuItemActionPerformed
              ShortcutsPage shortcuts = new ShortcutsPage();
              shortcuts.setVisible(true);
              shortcuts.setLocationRelativeTo(this);
       }//GEN-LAST:event_ShortcutsMenuItemActionPerformed

       private void AboutUsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutUsMenuItemActionPerformed
              AboutUsPage about = new AboutUsPage();
              about.setVisible(true);
              about.setLocationRelativeTo(this);
       }//GEN-LAST:event_AboutUsMenuItemActionPerformed

       /**
        * @param args the command line arguments
        */
       public static void main(String args[]) {
              /* Set the Nimbus look and feel */
              //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
              /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
               */
              try {
                     for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                            if ("Windows".equals(info.getName())) {
                                   javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                   break;
                            }
                     }
              } catch (ClassNotFoundException ex) {
                     java.util.logging.Logger.getLogger(SearchMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (InstantiationException ex) {
                     java.util.logging.Logger.getLogger(SearchMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (IllegalAccessException ex) {
                     java.util.logging.Logger.getLogger(SearchMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                     java.util.logging.Logger.getLogger(SearchMember.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              }
              //</editor-fold>

              /* Create and display the form */
              java.awt.EventQueue.invokeLater(new Runnable() {
                     public void run() {
                            new SearchMember().setVisible(true);
                     }
              });
       }

       // Variables declaration - do not modify//GEN-BEGIN:variables
       private javax.swing.JMenuItem AboutUsMenuItem;
       private javax.swing.JMenuItem AddBookMenuItem3;
       private javax.swing.JMenuItem AddMemberMenuItem2;
       private javax.swing.JRadioButton BirthRadioButton;
       private javax.swing.JButton ClearButton;
       private javax.swing.JMenuItem DeleteBookMenuButton2;
       private javax.swing.JMenuItem DeleteMemberMenuItem2;
       private javax.swing.JMenuItem EditBookMenuItem2;
       private javax.swing.JMenuItem EditMemberMenuItem2;
       private javax.swing.JButton ExitButton;
       private javax.swing.JMenuItem ExitMenuItem2;
       private javax.swing.JMenu HelpMenu;
       private javax.swing.JMenuItem IssueBookMenuItem2;
       private javax.swing.JRadioButton MemberNameRadioButton;
       private javax.swing.JRadioButton MemberNumberRadioButton;
       private javax.swing.JButton MenuButton;
       private javax.swing.JRadioButton PhoneRadioButton;
       private javax.swing.JMenuItem PurchaseBookMenuItem;
       private javax.swing.JTable ResultTable;
       private javax.swing.JMenuItem ReturnBookMenuItem2;
       private javax.swing.JMenuItem SearchBookMenuItem;
       private javax.swing.JButton SearchButton;
       private javax.swing.JTextField SearchTermBox;
       private javax.swing.JLabel SearchTermLabel;
       private javax.swing.JMenuItem ShortcutsMenuItem;
       private javax.swing.JComboBox<String> SortByCombo;
       private javax.swing.JLabel SortByLabel;
       private javax.swing.JMenuItem ViewBooksMenuItem2;
       private javax.swing.JMenuItem ViewIssuesMenuItem2;
       private javax.swing.JMenuItem ViewMembersMenuItem2;
       private javax.swing.JMenuItem ViewPurchasesMenuItem2;
       private javax.swing.JMenuItem ViewReturnsMenuItem2;
       private javax.swing.ButtonGroup buttonGroup1;
       private javax.swing.JLabel jLabel1;
       private javax.swing.JLabel jLabel2;
       private javax.swing.JLabel jLabel3;
       private javax.swing.JMenu jMenu6;
       private javax.swing.JMenuBar jMenuBar4;
       private javax.swing.JScrollPane jScrollPane1;
       private javax.swing.JPopupMenu.Separator jSeparator19;
       private javax.swing.JPopupMenu.Separator jSeparator2;
       private javax.swing.JPopupMenu.Separator jSeparator21;
       private javax.swing.JPopupMenu.Separator jSeparator22;
       private javax.swing.JPopupMenu.Separator jSeparator24;
       private javax.swing.JPopupMenu.Separator jSeparator25;
       private javax.swing.JPopupMenu.Separator jSeparator26;
       private javax.swing.JPopupMenu.Separator jSeparator27;
       // End of variables declaration//GEN-END:variables

       private void SetIcon() {
              
              setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("appIcon.png")));
       }
}
