import com.sun.glass.events.KeyEvent;
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Malay Agarwal
 */
public class EditBook extends javax.swing.JFrame {

       /**
        * Creates new form EditBook
        */
       public EditBook() {
              initComponents();
              
              SetIcon();
       }
       
       public EditBook(int bookNo){
              
              initComponents();
              
              SetIcon();
              
              BookNumberRadioButton.doClick();
              SearchTermBox.setText(Integer.toString(bookNo));
              SearchButton.doClick();
              BooksComboBox.setSelectedIndex(1);
       }

       /**
        * This method is called from within the constructor to initialize the form.
        * WARNING: Do NOT modify this code. The content of this method is always
        * regenerated by the Form Editor.
        */
       @SuppressWarnings("unchecked")
       // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
       private void initComponents() {

              buttonGroup1 = new javax.swing.ButtonGroup();
              HeaderLabel = new javax.swing.JLabel();
              EditPanel = new javax.swing.JPanel();
              BookNumberLabel = new javax.swing.JLabel();
              BookNumberBox = new javax.swing.JTextField();
              BookNameLabel = new javax.swing.JLabel();
              BookNameBox = new javax.swing.JTextField();
              AuthorLabel = new javax.swing.JLabel();
              AuthorBox = new javax.swing.JTextField();
              PublisherLabel = new javax.swing.JLabel();
              PublisherBox = new javax.swing.JTextField();
              PagesLabel = new javax.swing.JLabel();
              PagesBox = new javax.swing.JTextField();
              EditButton = new javax.swing.JButton();
              EditClearButton = new javax.swing.JButton();
              SearchTermLabel = new javax.swing.JLabel();
              SearchTermBox = new javax.swing.JTextField();
              BooksLabel = new javax.swing.JLabel();
              BooksComboBox = new javax.swing.JComboBox<>();
              SearchButton = new javax.swing.JButton();
              ClearButton = new javax.swing.JButton();
              MenuButton = new javax.swing.JButton();
              ExitButton = new javax.swing.JButton();
              BookNumberRadioButton = new javax.swing.JRadioButton();
              BookNameRadioButton = new javax.swing.JRadioButton();
              AuthorRadioButton = new javax.swing.JRadioButton();
              PublisherRadioButton = new javax.swing.JRadioButton();
              Menubar = new javax.swing.JMenuBar();
              jMenu1 = new javax.swing.JMenu();
              AddBookMenuItem = new javax.swing.JMenuItem();
              AddMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator2 = new javax.swing.JPopupMenu.Separator();
              IssueBookMenuItem = new javax.swing.JMenuItem();
              ReturnBookMenuItem = new javax.swing.JMenuItem();
              PurchaseStockMenuItem = new javax.swing.JMenuItem();
              jSeparator3 = new javax.swing.JPopupMenu.Separator();
              SearchBookMenuItem = new javax.swing.JMenuItem();
              jSeparator8 = new javax.swing.JPopupMenu.Separator();
              ViewIssuesMenuItem = new javax.swing.JMenuItem();
              ViewReturnsMenuItem = new javax.swing.JMenuItem();
              ViewPurchasesMenuItem = new javax.swing.JMenuItem();
              jSeparator4 = new javax.swing.JPopupMenu.Separator();
              SearchMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator5 = new javax.swing.JPopupMenu.Separator();
              DeleteBookMenuButton = new javax.swing.JMenuItem();
              DeleteMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator6 = new javax.swing.JPopupMenu.Separator();
              EditMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator7 = new javax.swing.JPopupMenu.Separator();
              ViewBooksMenuItem = new javax.swing.JMenuItem();
              ViewMembersMenuItem = new javax.swing.JMenuItem();
              jSeparator1 = new javax.swing.JPopupMenu.Separator();
              ExitMenuItem = new javax.swing.JMenuItem();
              jMenu2 = new javax.swing.JMenu();
              ShortcutsMenuItem = new javax.swing.JMenuItem();
              jSeparator9 = new javax.swing.JPopupMenu.Separator();
              AboutUsMenuItem = new javax.swing.JMenuItem();

              setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
              setTitle("Edit information of book");
              setMaximumSize(new java.awt.Dimension(1025, 520));
              setMinimumSize(new java.awt.Dimension(1025, 520));
              setResizable(false);

              HeaderLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
              HeaderLabel.setText("EDIT INFORMATION OF BOOK");

              EditPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

              BookNumberLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNumberLabel.setText("Book number:");
              BookNumberLabel.setEnabled(false);

              BookNumberBox.setEditable(false);
              BookNumberBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNumberBox.setEnabled(false);
              BookNumberBox.setNextFocusableComponent(BookNameBox);

              BookNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNameLabel.setText("Book name:");
              BookNameLabel.setEnabled(false);

              BookNameBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNameBox.setEnabled(false);
              BookNameBox.setNextFocusableComponent(AuthorBox);
              BookNameBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            BookNameBoxKeyPressed(evt);
                     }
              });

              AuthorLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              AuthorLabel.setText("Author:");
              AuthorLabel.setEnabled(false);

              AuthorBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              AuthorBox.setEnabled(false);
              AuthorBox.setNextFocusableComponent(PublisherBox);
              AuthorBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            AuthorBoxKeyPressed(evt);
                     }
              });

              PublisherLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PublisherLabel.setText("Publisher:");
              PublisherLabel.setEnabled(false);

              PublisherBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PublisherBox.setEnabled(false);
              PublisherBox.setNextFocusableComponent(PagesBox);
              PublisherBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            PublisherBoxKeyPressed(evt);
                     }
              });

              PagesLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PagesLabel.setText("Pages:");
              PagesLabel.setEnabled(false);

              PagesBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PagesBox.setEnabled(false);
              PagesBox.setNextFocusableComponent(EditButton);
              PagesBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            PagesBoxKeyPressed(evt);
                     }
              });

              EditButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              EditButton.setText("Edit");
              EditButton.setEnabled(false);
              EditButton.setNextFocusableComponent(EditClearButton);
              EditButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            EditButtonActionPerformed(evt);
                     }
              });

              EditClearButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              EditClearButton.setText("Clear");
              EditClearButton.setEnabled(false);
              EditClearButton.setNextFocusableComponent(BookNameBox);
              EditClearButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            EditClearButtonActionPerformed(evt);
                     }
              });

              javax.swing.GroupLayout EditPanelLayout = new javax.swing.GroupLayout(EditPanel);
              EditPanel.setLayout(EditPanelLayout);
              EditPanelLayout.setHorizontalGroup(
                     EditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(EditPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(EditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                   .addGroup(EditPanelLayout.createSequentialGroup()
                                          .addComponent(BookNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                          .addGap(18, 18, 18)
                                          .addComponent(BookNumberBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                   .addGroup(EditPanelLayout.createSequentialGroup()
                                          .addComponent(BookNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                          .addGap(18, 18, 18)
                                          .addComponent(BookNameBox))
                                   .addGroup(EditPanelLayout.createSequentialGroup()
                                          .addComponent(AuthorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                          .addGap(18, 18, 18)
                                          .addComponent(AuthorBox)))
                            .addGap(155, 155, 155)
                            .addGroup(EditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addGroup(EditPanelLayout.createSequentialGroup()
                                          .addGroup(EditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                 .addComponent(PublisherLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                                 .addComponent(PagesLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                          .addGap(18, 18, 18)
                                          .addGroup(EditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                 .addComponent(PublisherBox, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                 .addComponent(PagesBox)))
                                   .addGroup(EditPanelLayout.createSequentialGroup()
                                          .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                          .addGap(18, 18, 18)
                                          .addComponent(EditClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addContainerGap(182, Short.MAX_VALUE))
              );
              EditPanelLayout.setVerticalGroup(
                     EditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(EditPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(EditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(BookNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(BookNumberBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(PublisherLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(PublisherBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(34, 34, 34)
                            .addGroup(EditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(BookNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(BookNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(PagesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(PagesBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(34, 34, 34)
                            .addGroup(EditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addGroup(EditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                          .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                          .addComponent(EditClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                   .addGroup(EditPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                          .addComponent(AuthorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                          .addComponent(AuthorBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addContainerGap(86, Short.MAX_VALUE))
              );

              SearchTermLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              SearchTermLabel.setText("Enter search term: ");
              SearchTermLabel.setEnabled(false);

              SearchTermBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              SearchTermBox.setEnabled(false);
              SearchTermBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            SearchTermBoxKeyPressed(evt);
                     }
              });

              BooksLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BooksLabel.setText("Books:");
              BooksLabel.setEnabled(false);

              BooksComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BooksComboBox.setEnabled(false);
              BooksComboBox.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            BooksComboBoxActionPerformed(evt);
                     }
              });

              SearchButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              SearchButton.setText("Search");
              SearchButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SearchButtonActionPerformed(evt);
                     }
              });

              ClearButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ClearButton.setMnemonic('C');
              ClearButton.setText("Clear");
              ClearButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ClearButtonActionPerformed(evt);
                     }
              });

              MenuButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              MenuButton.setMnemonic('M');
              MenuButton.setText("Main menu");
              MenuButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            MenuButtonActionPerformed(evt);
                     }
              });

              ExitButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ExitButton.setText("Exit");
              ExitButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ExitButtonActionPerformed(evt);
                     }
              });

              buttonGroup1.add(BookNumberRadioButton);
              BookNumberRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNumberRadioButton.setText("Search by book number.");
              BookNumberRadioButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            BookNumberRadioButtonActionPerformed(evt);
                     }
              });

              buttonGroup1.add(BookNameRadioButton);
              BookNameRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNameRadioButton.setText("Search by book name.");
              BookNameRadioButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            BookNameRadioButtonActionPerformed(evt);
                     }
              });

              buttonGroup1.add(AuthorRadioButton);
              AuthorRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              AuthorRadioButton.setText("Search by author.");
              AuthorRadioButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AuthorRadioButtonActionPerformed(evt);
                     }
              });

              buttonGroup1.add(PublisherRadioButton);
              PublisherRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PublisherRadioButton.setText("Search by publisher.");
              PublisherRadioButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            PublisherRadioButtonActionPerformed(evt);
                     }
              });

              jMenu1.setText("Quick Actions");
              jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

              AddBookMenuItem.setText("Add a book");
              AddBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AddBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(AddBookMenuItem);

              AddMemberMenuItem.setText("Add a member");
              AddMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AddMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(AddMemberMenuItem);
              jMenu1.add(jSeparator2);

              IssueBookMenuItem.setText("Issue a book");
              IssueBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            IssueBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(IssueBookMenuItem);

              ReturnBookMenuItem.setText("Return a book");
              ReturnBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ReturnBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ReturnBookMenuItem);

              PurchaseStockMenuItem.setText("Purchase stock");
              PurchaseStockMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            PurchaseStockMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(PurchaseStockMenuItem);
              jMenu1.add(jSeparator3);

              SearchBookMenuItem.setText("Search for a book");
              SearchBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SearchBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(SearchBookMenuItem);
              jMenu1.add(jSeparator8);

              ViewIssuesMenuItem.setText("View issues");
              ViewIssuesMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewIssuesMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ViewIssuesMenuItem);

              ViewReturnsMenuItem.setText("View returns");
              ViewReturnsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewReturnsMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ViewReturnsMenuItem);

              ViewPurchasesMenuItem.setText("View purchases");
              ViewPurchasesMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewPurchasesMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ViewPurchasesMenuItem);
              jMenu1.add(jSeparator4);

              SearchMemberMenuItem.setText("Search for a member");
              SearchMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SearchMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(SearchMemberMenuItem);
              jMenu1.add(jSeparator5);

              DeleteBookMenuButton.setText("Delete a book");
              DeleteBookMenuButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DeleteBookMenuButtonActionPerformed(evt);
                     }
              });
              jMenu1.add(DeleteBookMenuButton);

              DeleteMemberMenuItem.setText("Delete a member");
              DeleteMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DeleteMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(DeleteMemberMenuItem);
              jMenu1.add(jSeparator6);

              EditMemberMenuItem.setText("Edit information of a member");
              EditMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            EditMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(EditMemberMenuItem);
              jMenu1.add(jSeparator7);

              ViewBooksMenuItem.setText("View all books");
              ViewBooksMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewBooksMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ViewBooksMenuItem);

              ViewMembersMenuItem.setText("View all members");
              ViewMembersMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewMembersMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ViewMembersMenuItem);
              jMenu1.add(jSeparator1);

              ExitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              ExitMenuItem.setText("Exit");
              ExitMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ExitMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ExitMenuItem);

              Menubar.add(jMenu1);

              jMenu2.setText("Help");
              jMenu2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

              ShortcutsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              ShortcutsMenuItem.setText("Shortcuts");
              ShortcutsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ShortcutsMenuItemActionPerformed(evt);
                     }
              });
              jMenu2.add(ShortcutsMenuItem);
              jMenu2.add(jSeparator9);

              AboutUsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              AboutUsMenuItem.setText("About us");
              AboutUsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AboutUsMenuItemActionPerformed(evt);
                     }
              });
              jMenu2.add(AboutUsMenuItem);

              Menubar.add(jMenu2);

              setJMenuBar(Menubar);

              javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
              getContentPane().setLayout(layout);
              layout.setHorizontalGroup(
                     layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(EditPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                     .addGroup(layout.createSequentialGroup()
                            .addGap(42, 42, 42)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                   .addComponent(BooksLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(SearchTermLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(31, 31, 31)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                   .addComponent(SearchTermBox, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                   .addComponent(BooksComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                   .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addGroup(layout.createSequentialGroup()
                                          .addComponent(HeaderLabel)
                                          .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                   .addGroup(layout.createSequentialGroup()
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                 .addComponent(SearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                 .addComponent(MenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                 .addComponent(ClearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                          .addGap(76, 140, Short.MAX_VALUE)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                 .addComponent(BookNumberRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                 .addComponent(AuthorRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                          .addGap(45, 45, 45)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                 .addComponent(BookNameRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                 .addComponent(PublisherRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                          .addGap(31, 31, 31))))
              );
              layout.setVerticalGroup(
                     layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(HeaderLabel)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(SearchTermLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(SearchTermBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(BookNumberRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(BookNameRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(BooksLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(BooksComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(AuthorRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(PublisherRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(MenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(EditPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
              );

              pack();
       }// </editor-fold>//GEN-END:initComponents

       public void Clear(){
              
              BookNumberLabel.setEnabled(false);
              BookNumberBox.setEnabled(false);
              BookNameLabel.setEnabled(false);
              BookNameBox.setEnabled(false);
              AuthorLabel.setEnabled(false);
              AuthorBox.setEnabled(false);
              PublisherLabel.setEnabled(false);
              PublisherBox.setEnabled(false);
              PagesLabel.setEnabled(false);
              PagesBox.setEnabled(false);
              
              
              BookNumberBox.setText("");
              BookNameBox.setText("");
              AuthorBox.setText("");
              PublisherBox.setText("");
              PagesBox.setText("");
              
              EditButton.setEnabled(false);
              EditClearButton.setEnabled(false);
       }
       
       
       private void AddBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookMenuItemActionPerformed
              this.setVisible(false);
              AddBook books = new AddBook();
              books.setVisible(true);
       }//GEN-LAST:event_AddBookMenuItemActionPerformed

       private void AddMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMemberMenuItemActionPerformed
              this.setVisible(false);
              AddMember member = new AddMember();
              member.setVisible(true);
       }//GEN-LAST:event_AddMemberMenuItemActionPerformed

       private void IssueBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueBookMenuItemActionPerformed
              this.setVisible(false);
              IssueBook issues = new IssueBook();
              issues.setVisible(true);
       }//GEN-LAST:event_IssueBookMenuItemActionPerformed

       private void ReturnBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnBookMenuItemActionPerformed
              this.setVisible(false);
              ReturnBook returns = new ReturnBook();
              returns.setVisible(true);
       }//GEN-LAST:event_ReturnBookMenuItemActionPerformed

       private void PurchaseStockMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseStockMenuItemActionPerformed
              this.setVisible(false);
              PurchaseBook purchase =  new PurchaseBook();
              purchase.setVisible(true);
       }//GEN-LAST:event_PurchaseStockMenuItemActionPerformed

       private void SearchBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBookMenuItemActionPerformed
              this.setVisible(false);
              SearchBook search = new SearchBook();
              search.setVisible(true);
       }//GEN-LAST:event_SearchBookMenuItemActionPerformed

       private void ViewIssuesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewIssuesMenuItemActionPerformed
              this.setVisible(false);
              ViewIssues issues = new ViewIssues();
              issues.setVisible(true);
       }//GEN-LAST:event_ViewIssuesMenuItemActionPerformed

       private void ViewReturnsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReturnsMenuItemActionPerformed
              this.setVisible(false);
              ViewReturns returns = new ViewReturns();
              returns.setVisible(true);
       }//GEN-LAST:event_ViewReturnsMenuItemActionPerformed

       private void ViewPurchasesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewPurchasesMenuItemActionPerformed
              this.setVisible(false);
              ViewPurchases purchase = new ViewPurchases();
              purchase.setVisible(true);
       }//GEN-LAST:event_ViewPurchasesMenuItemActionPerformed

       private void SearchMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchMemberMenuItemActionPerformed
              this.setVisible(false);
              SearchMember search = new SearchMember();
              search.setVisible(true);
       }//GEN-LAST:event_SearchMemberMenuItemActionPerformed

       private void DeleteBookMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBookMenuButtonActionPerformed
              this.setVisible(false);
              DeleteBook deleteBook = new DeleteBook();
              deleteBook.setVisible(true);
       }//GEN-LAST:event_DeleteBookMenuButtonActionPerformed

       private void EditMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditMemberMenuItemActionPerformed
              this.setVisible(false);
              new EditMember().setVisible(true);
       }//GEN-LAST:event_EditMemberMenuItemActionPerformed

       private void ViewBooksMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBooksMenuItemActionPerformed
              this.setVisible(false);
              new ViewBooks().setVisible(true);
       }//GEN-LAST:event_ViewBooksMenuItemActionPerformed

       private void ViewMembersMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewMembersMenuItemActionPerformed
              this.setVisible(false);
              new ViewMembers().setVisible(true);
       }//GEN-LAST:event_ViewMembersMenuItemActionPerformed

       private void ExitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuItemActionPerformed
              System.exit(0);
       }//GEN-LAST:event_ExitMenuItemActionPerformed

       private void ShortcutsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShortcutsMenuItemActionPerformed
              ShortcutsPage page = new ShortcutsPage();
              page.setVisible(true);
              page.setLocationRelativeTo(this);
       }//GEN-LAST:event_ShortcutsMenuItemActionPerformed

       private void AboutUsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutUsMenuItemActionPerformed
              AboutUsPage page = new AboutUsPage();
              page.setVisible(true);
              page.setLocationRelativeTo(this);
       }//GEN-LAST:event_AboutUsMenuItemActionPerformed

       private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
              EditClearButton.doClick();
              try{
                     
                     Class.forName("com.mysql.jdbc.Driver");
                     Connection con = DriverManager.getConnection("jdbc:mysql://localhost/library", "root", "password");
                     
                     Statement stmt = con.createStatement();
                     Statement stmt1 = con.createStatement();
                     
                     String query = "";
                     String count = "";
                     
                     if  (SearchTermBox.isEnabled() && !SearchTermBox.getText().equals("")){
                            
                            if (BookNumberRadioButton.isSelected()){
                                   
                                   query = "select bookName from books where bookNo = " + SearchTermBox.getText() + ";";
                                   count = "select COUNT(*) from books where bookNo = " + SearchTermBox.getText()  + ";";
                            }
                            else if (BookNameRadioButton.isSelected()){
                                   
                                   query = "select bookName from books where bookName like '%%" + SearchTermBox.getText() + "%%';";
                                   count = "select COUNT(*) from books where bookName like '%%" + SearchTermBox.getText() + "%%';";
                            }
                            else if (AuthorRadioButton.isSelected()){
                                   
                                   query = "select bookName from books where author like '%%" + SearchTermBox.getText() + "%%';";
                                   count = "select COUNT(*) from books where author like '%%" + SearchTermBox.getText() + "%%';";
                            }
                            else{
                                   
                                   query = "select bookName from books where publisher like '%%" + SearchTermBox.getText() + "%%';";
                                   count = "select COUNT(*) from books where publisher like '%%" + SearchTermBox.getText() + "%%';";
                            }
                            
                            ResultSet rs = stmt.executeQuery(query);
                            ResultSet rsCount = stmt1.executeQuery(count);
                            
                            int result = 0;
                            
                            while (rsCount.next()){
                                   
                                   result = rsCount.getInt(1);
                            }
                            
                            if  (result != 0){
                                   
                                   BooksLabel.setEnabled(true);
                                   BooksComboBox.setEnabled(true);
                                   
                                   String[] model = new String[result+1];
                                   int i = 1;
                                   model[0] = "<Select>";
                                   
                                   while (rs.next()){
                                          
                                          model[i] = rs.getString(1);
                                          i++;
                                   }
                                   
                                   BooksComboBox.setModel(new DefaultComboBoxModel(model));
                            }
                            else{
                                   
                                   JOptionPane.showMessageDialog(null, "No books matched the search criteria.");
                            }
                            
                            rs.close();
                            rsCount.close();
                     }
                     else{
                            
                            if (!BookNumberRadioButton.isSelected() && !BookNameRadioButton.isSelected() && !AuthorRadioButton.isSelected() && !PublisherRadioButton.isSelected()){
                                   
                                   JOptionPane.showMessageDialog(null, "Please select a radio button.");
                            }
                            else{
                                   
                                   JOptionPane.showMessageDialog(null, "Please enter a value in the box.");
                            }
                     }
                     
                     con.close();
                     stmt.close();
                     stmt1.close();
              }
              catch(Exception e){
                     
                     JOptionPane.showMessageDialog(null, "A database connection error occured.");
              }
       }//GEN-LAST:event_SearchButtonActionPerformed

       private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
              SearchTermBox.setText("");
              
              BooksLabel.setEnabled(false);
              BooksComboBox.setEnabled(false);
              BooksComboBox.removeAllItems();
              
              Clear();
              
              SearchTermBox.setEnabled(false);
              SearchTermLabel.setEnabled(false);
              
              buttonGroup1.clearSelection();
       }//GEN-LAST:event_ClearButtonActionPerformed

       private void MenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuButtonActionPerformed
              this.setVisible(false);
              MainPage page = new MainPage();
              page.setVisible(true);
       }//GEN-LAST:event_MenuButtonActionPerformed

       private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
              System.exit(0);
       }//GEN-LAST:event_ExitButtonActionPerformed

       private void BookNumberRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookNumberRadioButtonActionPerformed
              JRadioButton rb = (JRadioButton)evt.getSource();
              
              if (rb.isSelected()){
                     
                     SearchTermLabel.setEnabled(true);
                     SearchTermBox.setEnabled(true);
                     
                     SearchTermBox.setText("");
                     
                     SearchTermBox.requestFocusInWindow();
                     
                     BooksLabel.setEnabled(false);
                     BooksComboBox.setEnabled(false);
                     BooksComboBox.removeAllItems();
                     
                     
                     if (BookNumberLabel.isEnabled()){
                            
                            Clear();
                     }
              }
       }//GEN-LAST:event_BookNumberRadioButtonActionPerformed

       private void AuthorRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AuthorRadioButtonActionPerformed
              JRadioButton rb = (JRadioButton)evt.getSource();
              
              if (rb.isSelected()){
                     
                     SearchTermLabel.setEnabled(true);
                     SearchTermBox.setEnabled(true);
                     
                     SearchTermBox.setText("");
                     
                     SearchTermBox.requestFocusInWindow();
                     
                     BooksLabel.setEnabled(false);
                     BooksComboBox.setEnabled(false);
                     BooksComboBox.removeAllItems();
                     
                     
                     if (BookNumberLabel.isEnabled()){
                            
                            Clear();
                     }
              }
       }//GEN-LAST:event_AuthorRadioButtonActionPerformed

       private void BookNameRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookNameRadioButtonActionPerformed
              JRadioButton rb = (JRadioButton)evt.getSource();
              
              if (rb.isSelected()){
                     
                     SearchTermLabel.setEnabled(true);
                     SearchTermBox.setEnabled(true);
                     
                     SearchTermBox.setText("");
                     
                     SearchTermBox.requestFocusInWindow();
                     
                     BooksLabel.setEnabled(false);
                     BooksComboBox.setEnabled(false);
                     BooksComboBox.removeAllItems();
                     
                     if (BookNumberLabel.isEnabled()){
                            
                            
                            
                            Clear();
                     }
              }
       }//GEN-LAST:event_BookNameRadioButtonActionPerformed

       private void PublisherRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PublisherRadioButtonActionPerformed
              JRadioButton rb = (JRadioButton)evt.getSource();
              
              if (rb.isSelected()){
                     
                     SearchTermLabel.setEnabled(true);
                     SearchTermBox.setEnabled(true);
                     
                     SearchTermBox.setText("");
                     
                     SearchTermBox.requestFocusInWindow();
                     
                     BooksLabel.setEnabled(false);
                     BooksComboBox.setEnabled(false);
                     BooksComboBox.removeAllItems();
                     
                     if (BookNumberLabel.isEnabled()){
                            
                            Clear();
                     }
                     
              }
       }//GEN-LAST:event_PublisherRadioButtonActionPerformed

       private void SearchTermBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchTermBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     SearchButton.doClick();
              }
       }//GEN-LAST:event_SearchTermBoxKeyPressed

       private void BooksComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BooksComboBoxActionPerformed
              JComboBox cb = (JComboBox)evt.getSource();
              
              if (cb.getSelectedIndex() != 0 && cb.getSelectedIndex() != -1){
                     
                     BookNumberLabel.setEnabled(true);
                     BookNumberBox.setEnabled(true);
                     BookNameLabel.setEnabled(true);
                     BookNameBox.setEnabled(true);
                     AuthorLabel.setEnabled(true);
                     AuthorBox.setEnabled(true);
                     PublisherLabel.setEnabled(true);
                     PublisherBox.setEnabled(true);
                     PagesLabel.setEnabled(true);
                     PagesBox.setEnabled(true);
                     
                     EditButton.setEnabled(true);
                     EditClearButton.setEnabled(true);
                     
                     BookNameBox.requestFocusInWindow();
                     
                     try{
                            
                            Class.forName("com.mysql.jdbc.Driver");
                            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/library", "root", "password");
                            
                            Statement stmt = con.createStatement();
                            
                            String query= "select bookNo, bookName, author, publisher, pages from books where bookName = '" + cb.getSelectedItem().toString() + "';";
                            
                            ResultSet rs = stmt.executeQuery(query);
                            
                            while (rs.next()){
                                   
                                   BookNumberBox.setText(rs.getString(1));
                                   BookNameBox.setText(rs.getString(2));
                                   AuthorBox.setText(rs.getString(3));
                                   PublisherBox.setText(rs.getString(4));
                                   PagesBox.setText(rs.getString(5));
                            }
                            
                            rs.close();
                            stmt.close();
                            con.close();
                     }
                     catch(Exception e){
                            
                            JOptionPane.showMessageDialog(null, "A database connection error occured.");
                     }
              }
              else{
                     
                     EditClearButton.doClick();
              }
       }//GEN-LAST:event_BooksComboBoxActionPerformed

       private void EditClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditClearButtonActionPerformed
              Clear();
              BooksComboBox.setSelectedIndex(0);
       }//GEN-LAST:event_EditClearButtonActionPerformed

       private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
              try{

                     Class.forName("com.mysql.jdbc.Driver");
                     Connection con = DriverManager.getConnection("jdbc:mysql://localhost/library", "root", "password");

                     Statement stmt = con.createStatement();

                     String query = "";

                     if (JOptionPane.showConfirmDialog(null, "Are you sure?") == JOptionPane.YES_OPTION){

                            query = "update books set bookName = '" + BookNameBox.getText() + "', author = '" + AuthorBox.getText() + "', publisher = '" + PublisherBox.getText() + "', pages = " + PagesBox.getText() +  " where bookNo = " + BookNumberBox.getText() + ";";

                            stmt.executeUpdate(query);

                            query = "update issues set bookName = '" + BookNameBox.getText() + "' where bookNo = " + BookNumberBox.getText() + ";";

                            stmt.executeUpdate(query);

                            query = "update returns set bookName = '" + BookNameBox.getText() + "' where bookNo = " + BookNumberBox.getText() + ";";

                            stmt.executeUpdate(query);

                            query = "update purchases set bookName = '" + BookNameBox.getText() + "' where bookNo = " + BookNumberBox.getText() + ";";

                            stmt.executeUpdate(query);
                            
                            JOptionPane.showMessageDialog(null, "Book edited successfully!");
                            EditClearButton.doClick();
                     }
                     
                     stmt.close();
                     con.close();

              }
              catch (Exception e){
                     
                     JOptionPane.showMessageDialog(null, "A databse connection error occured.");

              }
       }//GEN-LAST:event_EditButtonActionPerformed

       private void PagesBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PagesBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     EditButton.doClick();
              }
       }//GEN-LAST:event_PagesBoxKeyPressed

       private void PublisherBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PublisherBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     EditButton.doClick();
              }
       }//GEN-LAST:event_PublisherBoxKeyPressed

       private void AuthorBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AuthorBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     EditButton.doClick();
              }
       }//GEN-LAST:event_AuthorBoxKeyPressed

       private void BookNameBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BookNameBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     EditButton.doClick();
              }
       }//GEN-LAST:event_BookNameBoxKeyPressed

       private void DeleteMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteMemberMenuItemActionPerformed
              this.setVisible(false);
              DeleteMember deleteMember = new DeleteMember();
              deleteMember.setVisible(true);
       }//GEN-LAST:event_DeleteMemberMenuItemActionPerformed

       /**
        * @param args the command line arguments
        */
       public static void main(String args[]) {
              /* Set the Nimbus look and feel */
              //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
              /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
               */
              try {
                     for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                            if ("Windows".equals(info.getName())) {
                                   javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                   break;
                            }
                     }
              } catch (ClassNotFoundException ex) {
                     java.util.logging.Logger.getLogger(EditBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (InstantiationException ex) {
                     java.util.logging.Logger.getLogger(EditBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (IllegalAccessException ex) {
                     java.util.logging.Logger.getLogger(EditBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                     java.util.logging.Logger.getLogger(EditBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              }
              //</editor-fold>

              /* Create and display the form */
              java.awt.EventQueue.invokeLater(new Runnable() {
                     public void run() {
                            new EditBook().setVisible(true);
                     }
              });
       }

       // Variables declaration - do not modify//GEN-BEGIN:variables
       private javax.swing.JMenuItem AboutUsMenuItem;
       private javax.swing.JMenuItem AddBookMenuItem;
       private javax.swing.JMenuItem AddMemberMenuItem;
       private javax.swing.JTextField AuthorBox;
       private javax.swing.JLabel AuthorLabel;
       private javax.swing.JRadioButton AuthorRadioButton;
       private javax.swing.JTextField BookNameBox;
       private javax.swing.JLabel BookNameLabel;
       private javax.swing.JRadioButton BookNameRadioButton;
       private javax.swing.JTextField BookNumberBox;
       private javax.swing.JLabel BookNumberLabel;
       private javax.swing.JRadioButton BookNumberRadioButton;
       private javax.swing.JComboBox<String> BooksComboBox;
       private javax.swing.JLabel BooksLabel;
       private javax.swing.JButton ClearButton;
       private javax.swing.JMenuItem DeleteBookMenuButton;
       private javax.swing.JMenuItem DeleteMemberMenuItem;
       private javax.swing.JButton EditButton;
       private javax.swing.JButton EditClearButton;
       private javax.swing.JMenuItem EditMemberMenuItem;
       private javax.swing.JPanel EditPanel;
       private javax.swing.JButton ExitButton;
       private javax.swing.JMenuItem ExitMenuItem;
       private javax.swing.JLabel HeaderLabel;
       private javax.swing.JMenuItem IssueBookMenuItem;
       private javax.swing.JButton MenuButton;
       private javax.swing.JMenuBar Menubar;
       private javax.swing.JTextField PagesBox;
       private javax.swing.JLabel PagesLabel;
       private javax.swing.JTextField PublisherBox;
       private javax.swing.JLabel PublisherLabel;
       private javax.swing.JRadioButton PublisherRadioButton;
       private javax.swing.JMenuItem PurchaseStockMenuItem;
       private javax.swing.JMenuItem ReturnBookMenuItem;
       private javax.swing.JMenuItem SearchBookMenuItem;
       private javax.swing.JButton SearchButton;
       private javax.swing.JMenuItem SearchMemberMenuItem;
       private javax.swing.JTextField SearchTermBox;
       private javax.swing.JLabel SearchTermLabel;
       private javax.swing.JMenuItem ShortcutsMenuItem;
       private javax.swing.JMenuItem ViewBooksMenuItem;
       private javax.swing.JMenuItem ViewIssuesMenuItem;
       private javax.swing.JMenuItem ViewMembersMenuItem;
       private javax.swing.JMenuItem ViewPurchasesMenuItem;
       private javax.swing.JMenuItem ViewReturnsMenuItem;
       private javax.swing.ButtonGroup buttonGroup1;
       private javax.swing.JMenu jMenu1;
       private javax.swing.JMenu jMenu2;
       private javax.swing.JPopupMenu.Separator jSeparator1;
       private javax.swing.JPopupMenu.Separator jSeparator2;
       private javax.swing.JPopupMenu.Separator jSeparator3;
       private javax.swing.JPopupMenu.Separator jSeparator4;
       private javax.swing.JPopupMenu.Separator jSeparator5;
       private javax.swing.JPopupMenu.Separator jSeparator6;
       private javax.swing.JPopupMenu.Separator jSeparator7;
       private javax.swing.JPopupMenu.Separator jSeparator8;
       private javax.swing.JPopupMenu.Separator jSeparator9;
       // End of variables declaration//GEN-END:variables

       private void SetIcon() {
              
              setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("appIcon.png")));
       }
}
