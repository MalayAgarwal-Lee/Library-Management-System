import com.sun.glass.events.KeyEvent;
import java.awt.Toolkit;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.ComboBox;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Malay Agarwal
 */
public class ReturnBook extends javax.swing.JFrame {

       /**
        * Creates new form ReturnBook
        */
       public ReturnBook() {
              initComponents();
              
              SetIcon();
              
              BookNameCombo.setVisible(false);
              MemberNameBox.requestFocusInWindow();
       }
       
       int issuedCopies = 0;

       /**
        * This method is called from within the constructor to initialize the form.
        * WARNING: Do NOT modify this code. The content of this method is always
        * regenerated by the Form Editor.
        */
       @SuppressWarnings("unchecked")
       // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
       private void initComponents() {

              jDialog1 = new javax.swing.JDialog();
              jDialog2 = new javax.swing.JDialog();
              jLabel1 = new javax.swing.JLabel();
              MemberNameLabel = new javax.swing.JLabel();
              MemberNameBox = new javax.swing.JTextField();
              MemberNumberLabel = new javax.swing.JLabel();
              MemberNumberBox = new javax.swing.JTextField();
              PhoneLabel = new javax.swing.JLabel();
              PhoneBox = new javax.swing.JTextField();
              BookNameLabel = new javax.swing.JLabel();
              BookNameBox = new javax.swing.JTextField();
              BookNumberLabel = new javax.swing.JLabel();
              BookNumberBox = new javax.swing.JTextField();
              NoOfCopiesLabel = new javax.swing.JLabel();
              NoOfCopiesBox = new javax.swing.JTextField();
              jLabel8 = new javax.swing.JLabel();
              GetDetailsButton = new javax.swing.JButton();
              IssuedCopiesLabel = new javax.swing.JLabel();
              IssuedCopiesBox = new javax.swing.JTextField();
              DateOfReturnBox = new javax.swing.JTextField();
              ReturnBookButton = new javax.swing.JButton();
              ClearButton = new javax.swing.JButton();
              MenuButton = new javax.swing.JButton();
              ExitButton = new javax.swing.JButton();
              BookNameCombo = new javax.swing.JComboBox<>();
              jLabel2 = new javax.swing.JLabel();
              jMenuBar9 = new javax.swing.JMenuBar();
              jMenu11 = new javax.swing.JMenu();
              AddBookMenuItem8 = new javax.swing.JMenuItem();
              AddMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator2 = new javax.swing.JPopupMenu.Separator();
              IssueBookMenuItem = new javax.swing.JMenuItem();
              PurchaseBookMenuItem = new javax.swing.JMenuItem();
              jSeparator3 = new javax.swing.JPopupMenu.Separator();
              SearchBookMenuItem = new javax.swing.JMenuItem();
              jSeparator8 = new javax.swing.JPopupMenu.Separator();
              ViewIssuesMenuItem = new javax.swing.JMenuItem();
              ViewReturnsMenuItem = new javax.swing.JMenuItem();
              ViewPurchasesMenuItem = new javax.swing.JMenuItem();
              jSeparator4 = new javax.swing.JPopupMenu.Separator();
              SearchMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator5 = new javax.swing.JPopupMenu.Separator();
              DeleteBookMenuButton = new javax.swing.JMenuItem();
              DeleteMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator6 = new javax.swing.JPopupMenu.Separator();
              EditBookMenuItem = new javax.swing.JMenuItem();
              EditMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator7 = new javax.swing.JPopupMenu.Separator();
              ViewBooksMenuItem = new javax.swing.JMenuItem();
              ViewMembersMenuItem = new javax.swing.JMenuItem();
              jSeparator1 = new javax.swing.JPopupMenu.Separator();
              ExitMenuItem = new javax.swing.JMenuItem();
              jMenu12 = new javax.swing.JMenu();
              ShortcutsMenuItem = new javax.swing.JMenuItem();
              jSeparator9 = new javax.swing.JPopupMenu.Separator();
              AboutUsMenuItem = new javax.swing.JMenuItem();

              javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
              jDialog1.getContentPane().setLayout(jDialog1Layout);
              jDialog1Layout.setHorizontalGroup(
                     jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGap(0, 400, Short.MAX_VALUE)
              );
              jDialog1Layout.setVerticalGroup(
                     jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGap(0, 300, Short.MAX_VALUE)
              );

              javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
              jDialog2.getContentPane().setLayout(jDialog2Layout);
              jDialog2Layout.setHorizontalGroup(
                     jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGap(0, 400, Short.MAX_VALUE)
              );
              jDialog2Layout.setVerticalGroup(
                     jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGap(0, 300, Short.MAX_VALUE)
              );

              setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
              setTitle("Return a book");
              setResizable(false);

              jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
              jLabel1.setText("RETURN A BOOK");

              MemberNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              MemberNameLabel.setText("Enter member name:");

              MemberNameBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              MemberNameBox.setNextFocusableComponent(NoOfCopiesBox);
              MemberNameBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            MemberNameBoxKeyPressed(evt);
                     }
              });

              MemberNumberLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              MemberNumberLabel.setText("Member number:");
              MemberNumberLabel.setEnabled(false);

              MemberNumberBox.setEditable(false);
              MemberNumberBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              MemberNumberBox.setEnabled(false);

              PhoneLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PhoneLabel.setText("Phone:");
              PhoneLabel.setEnabled(false);

              PhoneBox.setEditable(false);
              PhoneBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PhoneBox.setEnabled(false);

              BookNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNameLabel.setText("Book name:");
              BookNameLabel.setEnabled(false);

              BookNameBox.setEditable(false);
              BookNameBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNameBox.setEnabled(false);

              BookNumberLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNumberLabel.setText("Book number:");
              BookNumberLabel.setEnabled(false);

              BookNumberBox.setEditable(false);
              BookNumberBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNumberBox.setEnabled(false);

              NoOfCopiesLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              NoOfCopiesLabel.setText("No of copies:");

              NoOfCopiesBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              NoOfCopiesBox.setNextFocusableComponent(DateOfReturnBox);
              NoOfCopiesBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            NoOfCopiesBoxKeyPressed(evt);
                     }
              });

              jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              jLabel8.setText("Date of returning (dd/mm/yyyy):");

              GetDetailsButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              GetDetailsButton.setText("Get details");
              GetDetailsButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            GetDetailsButtonActionPerformed(evt);
                     }
              });

              IssuedCopiesLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              IssuedCopiesLabel.setText("No of copies issued by member:");
              IssuedCopiesLabel.setEnabled(false);

              IssuedCopiesBox.setEditable(false);
              IssuedCopiesBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              IssuedCopiesBox.setEnabled(false);

              DateOfReturnBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              DateOfReturnBox.setNextFocusableComponent(ReturnBookButton);
              DateOfReturnBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            DateOfReturnBoxKeyPressed(evt);
                     }
              });

              ReturnBookButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ReturnBookButton.setText("Return the book");
              ReturnBookButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ReturnBookButtonActionPerformed(evt);
                     }
              });

              ClearButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ClearButton.setMnemonic('C');
              ClearButton.setText("Clear");
              ClearButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ClearButtonActionPerformed(evt);
                     }
              });

              MenuButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              MenuButton.setMnemonic('M');
              MenuButton.setText("Main menu");
              MenuButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            MenuButtonActionPerformed(evt);
                     }
              });

              ExitButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ExitButton.setText("Exit");
              ExitButton.setNextFocusableComponent(MemberNameBox);
              ExitButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ExitButtonActionPerformed(evt);
                     }
              });

              BookNameCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNameCombo.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            BookNameComboActionPerformed(evt);
                     }
              });

              jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              jLabel2.setText("Enter only the member name and click on the Get deatils button.");

              jMenu11.setText("Quick Actions");
              jMenu11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

              AddBookMenuItem8.setText("Add a book");
              AddBookMenuItem8.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AddBookMenuItem8ActionPerformed(evt);
                     }
              });
              jMenu11.add(AddBookMenuItem8);

              AddMemberMenuItem.setText("Add a member");
              AddMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AddMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(AddMemberMenuItem);
              jMenu11.add(jSeparator2);

              IssueBookMenuItem.setText("Issue a book");
              IssueBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            IssueBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(IssueBookMenuItem);

              PurchaseBookMenuItem.setText("Purchase a book");
              PurchaseBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            PurchaseBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(PurchaseBookMenuItem);
              jMenu11.add(jSeparator3);

              SearchBookMenuItem.setText("Search for a book");
              SearchBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SearchBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(SearchBookMenuItem);
              jMenu11.add(jSeparator8);

              ViewIssuesMenuItem.setText("View issues");
              ViewIssuesMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewIssuesMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(ViewIssuesMenuItem);

              ViewReturnsMenuItem.setText("View returns");
              ViewReturnsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewReturnsMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(ViewReturnsMenuItem);

              ViewPurchasesMenuItem.setText("View purchases");
              ViewPurchasesMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewPurchasesMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(ViewPurchasesMenuItem);
              jMenu11.add(jSeparator4);

              SearchMemberMenuItem.setText("Search for a member");
              SearchMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SearchMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(SearchMemberMenuItem);
              jMenu11.add(jSeparator5);

              DeleteBookMenuButton.setText("Delete a book");
              DeleteBookMenuButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DeleteBookMenuButtonActionPerformed(evt);
                     }
              });
              jMenu11.add(DeleteBookMenuButton);

              DeleteMemberMenuItem.setText("Delete a member");
              DeleteMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DeleteMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(DeleteMemberMenuItem);
              jMenu11.add(jSeparator6);

              EditBookMenuItem.setText("Edit information of a book");
              EditBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            EditBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(EditBookMenuItem);

              EditMemberMenuItem.setText("Edit information of a member");
              EditMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            EditMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(EditMemberMenuItem);
              jMenu11.add(jSeparator7);

              ViewBooksMenuItem.setText("View all books");
              ViewBooksMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewBooksMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(ViewBooksMenuItem);

              ViewMembersMenuItem.setText("View all members");
              ViewMembersMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewMembersMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(ViewMembersMenuItem);
              jMenu11.add(jSeparator1);

              ExitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              ExitMenuItem.setText("Exit");
              ExitMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ExitMenuItemActionPerformed(evt);
                     }
              });
              jMenu11.add(ExitMenuItem);

              jMenuBar9.add(jMenu11);

              jMenu12.setText("Help");
              jMenu12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

              ShortcutsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              ShortcutsMenuItem.setText("Shortcuts");
              ShortcutsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ShortcutsMenuItemActionPerformed(evt);
                     }
              });
              jMenu12.add(ShortcutsMenuItem);
              jMenu12.add(jSeparator9);

              AboutUsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              AboutUsMenuItem.setText("About us");
              AboutUsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AboutUsMenuItemActionPerformed(evt);
                     }
              });
              jMenu12.add(AboutUsMenuItem);

              jMenuBar9.add(jMenu12);

              setJMenuBar(jMenuBar9);

              javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
              getContentPane().setLayout(layout);
              layout.setHorizontalGroup(
                     layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                            .addGap(41, 41, 41)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                   .addComponent(BookNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                   .addComponent(BookNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                   .addComponent(PhoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                   .addComponent(MemberNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                   .addComponent(MemberNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(37, 37, 37)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                   .addComponent(MemberNumberBox)
                                   .addComponent(PhoneBox, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                   .addComponent(BookNameBox)
                                   .addComponent(BookNumberBox)
                                   .addComponent(MemberNameBox))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addGroup(layout.createSequentialGroup()
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                 .addGroup(layout.createSequentialGroup()
                                                        .addComponent(GetDetailsButton)
                                                        .addGap(56, 56, 56)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                               .addComponent(IssuedCopiesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                               .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                               .addComponent(NoOfCopiesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                 .addComponent(MenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                 .addGroup(layout.createSequentialGroup()
                                                        .addGap(51, 51, 51)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                               .addComponent(DateOfReturnBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                               .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                      .addComponent(IssuedCopiesBox)
                                                                      .addComponent(NoOfCopiesBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                 .addGroup(layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                   .addComponent(BookNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                     .addGroup(layout.createSequentialGroup()
                            .addGap(187, 187, 187)
                            .addComponent(ReturnBookButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap(452, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                          .addComponent(jLabel2)
                                          .addGap(43, 43, 43))
                                   .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                          .addComponent(jLabel1)
                                          .addGap(415, 415, 415))))
              );
              layout.setVerticalGroup(
                     layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1)
                            .addGap(40, 40, 40)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addGroup(layout.createSequentialGroup()
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                 .addComponent(MemberNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                 .addComponent(MemberNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                 .addComponent(MemberNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                 .addComponent(MemberNumberBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                 .addComponent(GetDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                 .addComponent(PhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                 .addComponent(PhoneBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                 .addComponent(BookNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                 .addComponent(BookNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                 .addComponent(BookNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                 .addComponent(BookNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                 .addComponent(BookNumberBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                   .addGroup(layout.createSequentialGroup()
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                 .addComponent(NoOfCopiesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                 .addComponent(NoOfCopiesBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                          .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                 .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                 .addComponent(DateOfReturnBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                          .addGap(104, 104, 104)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                 .addComponent(IssuedCopiesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                 .addComponent(IssuedCopiesBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(55, 55, 55)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(ReturnBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(MenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(66, 66, 66)
                            .addComponent(jLabel2)
                            .addContainerGap())
              );

              pack();
       }// </editor-fold>//GEN-END:initComponents

       
       public void GetDetails()
       {
              int c = 0;
              if  (!MemberNameBox.getText().equals("")){
                     
                     try{
                            
                            Class.forName("com.mysql.jdbc.Driver");
                            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/library", "root", "password");
                            
                            Statement stmt = con.createStatement();
                            String query1 = "select bookNo, memberNo, bookName, phone, leftCopies from issues where memberName = '"+MemberNameBox.getText()+"' and leftCopies != 0;";
                            
                            ResultSet rs = stmt.executeQuery(query1);
                            
                            int count = 0;
                            
                            while (rs.next()){
                                   c = 1;
                                   count++;
                            }
                            
                            
                            if (c == 1){
                                   
                                   MemberNumberBox.setEnabled(true);
                                   MemberNumberLabel.setEnabled(true);
                                   PhoneBox.setEnabled(true);
                                   PhoneLabel.setEnabled(true);
                                   BookNameBox.setEnabled(true);
                                   BookNameLabel.setEnabled(true);
                                   BookNumberBox.setEnabled(true);
                                   BookNumberLabel.setEnabled(true);
                                   IssuedCopiesBox.setEnabled(true);
                                   IssuedCopiesLabel.setEnabled(true);
                                   
                                   String query2  = "select bookNo, memberNo, bookName, phone, leftCopies from issues where memberName = '"+MemberNameBox.getText()+"' and leftCopies != 0;";
                                   rs = stmt.executeQuery(query2);
                                   
                                   if (count == 1){
                                         
                                          while (rs.next()){
                                                
                                                 if (rs.getInt(5) != 0){
                                                        
                                                        MemberNumberBox.setText(Integer.toString(rs.getInt(2)));
                                                        PhoneBox.setText(rs.getString(4));
                                                        BookNumberBox.setText(rs.getString(1));
                                                        BookNameBox.setText(rs.getString(3));
                                                        IssuedCopiesBox.setText(rs.getString(5));
                                                        issuedCopies = rs.getInt(5);
                                                        
                                                        NoOfCopiesBox.requestFocusInWindow();
                                                 }
                                                 else{
                                                       JOptionPane.showMessageDialog(null, "The member has returned all copies of issued books.");
                                                       MemberNameBox.requestFocusInWindow();
                                                 }                                                 
                                          }    
                                   }
                                   else{
                                          
                                          BookNameCombo.setVisible(true);
                                          
                                          String[] model = new String[count+1];
                                          int i = 1;
                                          model[0] = "<Select>";
                                          
                                          while (rs.next()){

                                                 if (rs.getInt(5) != 0){
                                                 
                                                        MemberNumberBox.setText(Integer.toString(rs.getInt(2)));
                                                        PhoneBox.setText(rs.getString(4));
                                                        model[i] = rs.getString(3);
                                                        i++;
                                                 }
                                          }
                                          
                                          BookNameCombo.setModel(new DefaultComboBoxModel(model));   
                                          BookNameCombo.requestFocusInWindow();
                                   }    
                            } 
                            else{
                                   
                                   int k = 0;
                                   
                                   query1 = "select * from members where memberName = '" + MemberNameBox.getText() + "';";
                                   
                                   rs =  stmt.executeQuery(query1);
                                   
                                   while (rs.next()){
                                          
                                          k = 1;
                                   }
                                   
                                   if (k  != 0){
                                          
                                          JOptionPane.showMessageDialog(null, "The member has no books to return.");
                                   }
                                   else{
                                          
                                          JOptionPane.showMessageDialog(null, "The name is not registered in the library.");
                                   }
                                   
                                   MemberNameBox.requestFocusInWindow();
                            }
                         
                            rs.close();
                            stmt.close();
                            con.close();
                     }
                     catch(Exception e){
                            
                            JOptionPane.showMessageDialog(null, "A database connection error occured.");
                            
                     }
              }
              else{
                     JOptionPane.showMessageDialog(null, "Please enter a value in the member name field.");
              }
       }
       
       public void Clear(){
              
              MemberNameBox.setText("");
              MemberNumberBox.setText("");
              BookNameBox.setText("");
              BookNumberBox.setText("");
              PhoneBox.setText("");
              NoOfCopiesBox.setText("");
              DateOfReturnBox.setText("");
              IssuedCopiesBox.setText("");
                           
              MemberNumberBox.setEnabled(false);
              MemberNumberLabel.setEnabled(false);
              PhoneBox.setEnabled(false);
              PhoneLabel.setEnabled(false);
              BookNameBox.setEnabled(false);
              BookNameLabel.setEnabled(false);
              BookNumberBox.setEnabled(false);
              BookNumberLabel.setEnabled(false);
              IssuedCopiesBox.setEnabled(false);
              IssuedCopiesLabel.setEnabled(false);
                           
              BookNameCombo.setVisible(false);
              
              MemberNameBox.requestFocusInWindow();
       }
       
       
       private void GetDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetDetailsButtonActionPerformed
              GetDetails();
       }//GEN-LAST:event_GetDetailsButtonActionPerformed

       private void ReturnBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnBookButtonActionPerformed
             if (!NoOfCopiesBox.getText().equals("") && !DateOfReturnBox.getText().equals("")){
              
                     try{
                    
                            Class.forName("com.mysql.jdbc.Driver");
                    
                            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/library", "root", "password");
                    
                            if (JOptionPane.showConfirmDialog(null, "Are you sure?") == JOptionPane.YES_OPTION){
                           
                                   String query = "insert into returns (bookNo, bookName, memberNo, memberName, phone, noOfCopies, dateOfReturn, leftCopies) "+"values (?, ?, ?, ?, ?, ?, ?, ?);" ;
                           
                                   String dor = DateOfReturnBox.getText().substring(6, 10) + DateOfReturnBox.getText().substring(2, 6) + DateOfReturnBox.getText().substring(0, 2);
                                   int leftCopies = issuedCopies-Integer.parseInt(NoOfCopiesBox.getText());
                           
                                   PreparedStatement stmt = con.prepareStatement(query);
                                   stmt.setString(1, BookNumberBox.getText());
                                   stmt.setString(2, BookNameBox.getText());
                                   stmt.setString(3, MemberNumberBox.getText());
                                   stmt.setString(4, MemberNameBox.getText());
                                   stmt.setString(5, PhoneBox.getText());
                                   stmt.setString(6, NoOfCopiesBox.getText());
                                   stmt.setString(7, dor);
                                   stmt.setString(8, Integer.toString(leftCopies));
                            
                                   stmt.execute();
                            
                                   Statement stmt2 = con.createStatement();
                                   String query2 = "update books set balance = balance + "+ NoOfCopiesBox.getText() +" where bookNo = "+BookNumberBox.getText() + ";";
                                   stmt2.executeUpdate(query2);
                            
                                   Statement stmt3 = con.createStatement();
                                   String query3 = "update issues set leftCopies = " + leftCopies + " where bookNo = " + BookNumberBox.getText() + " and memberNo = " + MemberNumberBox.getText() + ";";
                                   stmt3.executeUpdate(query3);
                            
                                   JOptionPane.showMessageDialog(null, "Book returned successfully!");
                            
                                   stmt.close();
                                   stmt2.close();
                                   stmt3.close();
                            }
                            
                            Clear();
                            con.close();
                     }
                     catch(Exception e){
                            JOptionPane.showMessageDialog(null, e.getMessage());
                     }
             }
             else{
                    
                    JOptionPane.showMessageDialog(null, "One or more than one fields are empty");
             }
       }//GEN-LAST:event_ReturnBookButtonActionPerformed

       private void MenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuButtonActionPerformed
              this.setVisible(false);
              MainPage page = new MainPage();
              page.setVisible(true);
       }//GEN-LAST:event_MenuButtonActionPerformed

       private void BookNameComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookNameComboActionPerformed
              JComboBox cb= (JComboBox)evt.getSource();
              BookNameBox.setText(cb.getSelectedItem().toString());
              
              if (!BookNameBox.getText().equals("")){
                     
                     try{
                     
                            Class.forName("com.mysql.jdbc.Driver");
                     
                            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/library", "root", "password");
                     
                            Statement stmt = con.createStatement();
                     
                            String query = "select bookNo, leftCopies from issues where bookName = '"+BookNameBox.getText()+"' and memberNo =  " + MemberNumberBox.getText()+";";
                            
                            ResultSet rs = stmt.executeQuery(query);
                            
                            while (rs.next()){
                                   
                                          BookNumberBox.setText(rs.getString(1));
                                          IssuedCopiesBox.setText(rs.getString(2));
                                          issuedCopies = rs.getInt(2);
                                          
                                          NoOfCopiesBox.requestFocusInWindow();
                            }
                            
                            rs.close();
                            stmt.close();
                            con.close();
                     }
                     catch(Exception e){
                            JOptionPane.showMessageDialog(null, "A databse connection error occured.");
                     }
              }
              else{
                     JOptionPane.showMessageDialog(null, "Please select a value from the combo box.");
              }
              
       }//GEN-LAST:event_BookNameComboActionPerformed

       private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
              Clear();
       }//GEN-LAST:event_ClearButtonActionPerformed

       private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
              System.exit(0);
       }//GEN-LAST:event_ExitButtonActionPerformed

       private void MemberNameBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MemberNameBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     GetDetailsButton.doClick();
              }
       }//GEN-LAST:event_MemberNameBoxKeyPressed

       private void NoOfCopiesBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NoOfCopiesBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     ReturnBookButton.doClick();
              }
       }//GEN-LAST:event_NoOfCopiesBoxKeyPressed

       private void DateOfReturnBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DateOfReturnBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     ReturnBookButton.doClick();
              }
       }//GEN-LAST:event_DateOfReturnBoxKeyPressed

       private void AddBookMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookMenuItem8ActionPerformed
              this.setVisible(false);
              AddBook books = new AddBook();
              books.setVisible(true);
       }//GEN-LAST:event_AddBookMenuItem8ActionPerformed

       private void AddMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMemberMenuItemActionPerformed
              this.setVisible(false);
              AddMember member = new AddMember();
              member.setVisible(true);
       }//GEN-LAST:event_AddMemberMenuItemActionPerformed

       private void IssueBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueBookMenuItemActionPerformed
              this.setVisible(false);
              IssueBook issues = new IssueBook();
              issues.setVisible(true);
       }//GEN-LAST:event_IssueBookMenuItemActionPerformed

       private void SearchBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBookMenuItemActionPerformed
              this.setVisible(false);
              SearchBook search = new SearchBook();
              search.setVisible(true);
       }//GEN-LAST:event_SearchBookMenuItemActionPerformed

       private void ViewIssuesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewIssuesMenuItemActionPerformed
              this.setVisible(false);
              ViewIssues issues = new ViewIssues();
              issues.setVisible(true);
       }//GEN-LAST:event_ViewIssuesMenuItemActionPerformed

       private void ViewReturnsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReturnsMenuItemActionPerformed
              this.setVisible(false);
              ViewReturns returns = new ViewReturns();
              returns.setVisible(true);
       }//GEN-LAST:event_ViewReturnsMenuItemActionPerformed

       private void ViewPurchasesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewPurchasesMenuItemActionPerformed
              this.setVisible(false);
              ViewPurchases purchase = new ViewPurchases();
              purchase.setVisible(true);
       }//GEN-LAST:event_ViewPurchasesMenuItemActionPerformed

       private void SearchMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchMemberMenuItemActionPerformed
              this.setVisible(false);
              SearchMember search = new SearchMember();
              search.setVisible(true);
       }//GEN-LAST:event_SearchMemberMenuItemActionPerformed

       private void DeleteBookMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBookMenuButtonActionPerformed
              this.setVisible(false);
              DeleteBook deleteBook  = new DeleteBook();
              deleteBook.setVisible(true);
       }//GEN-LAST:event_DeleteBookMenuButtonActionPerformed

       private void DeleteMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteMemberMenuItemActionPerformed
              this.setVisible(false);
              new DeleteMember().setVisible(true);
       }//GEN-LAST:event_DeleteMemberMenuItemActionPerformed

       private void EditBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBookMenuItemActionPerformed
              this.setVisible(false);
              new EditBook().setVisible(true);
       }//GEN-LAST:event_EditBookMenuItemActionPerformed

       private void EditMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditMemberMenuItemActionPerformed
              this.setVisible(false);
              new EditMember().setVisible(true);
       }//GEN-LAST:event_EditMemberMenuItemActionPerformed

       private void ViewBooksMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBooksMenuItemActionPerformed
              this.setVisible(false);
              new ViewBooks().setVisible(true);
       }//GEN-LAST:event_ViewBooksMenuItemActionPerformed

       private void ViewMembersMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewMembersMenuItemActionPerformed
              this.setVisible(false);
              new ViewMembers().setVisible(true);
       }//GEN-LAST:event_ViewMembersMenuItemActionPerformed

       private void ExitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuItemActionPerformed
              System.exit(0);
       }//GEN-LAST:event_ExitMenuItemActionPerformed

       private void PurchaseBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseBookMenuItemActionPerformed
              this.setVisible(false);
              PurchaseBook purchase = new PurchaseBook();
              purchase.setVisible(true);
       }//GEN-LAST:event_PurchaseBookMenuItemActionPerformed

       private void AboutUsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutUsMenuItemActionPerformed
              AboutUsPage page = new AboutUsPage();
              page.setVisible(true);
              page.setLocationRelativeTo(this);
       }//GEN-LAST:event_AboutUsMenuItemActionPerformed

       private void ShortcutsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShortcutsMenuItemActionPerformed
              ShortcutsPage page = new ShortcutsPage();
              page.setVisible(true);
              page.setLocationRelativeTo(this);
       }//GEN-LAST:event_ShortcutsMenuItemActionPerformed

       /**
        * @param args the command line arguments
        */
       public static void main(String args[]) {
              /* Set the Nimbus look and feel */
              //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
              /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
               */
              try {
                     for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                            if ("Windows".equals(info.getName())) {
                                   javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                   break;
                            }
                     }
              } catch (ClassNotFoundException ex) {
                     java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (InstantiationException ex) {
                     java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (IllegalAccessException ex) {
                     java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                     java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              }
              //</editor-fold>

              /* Create and display the form */
              java.awt.EventQueue.invokeLater(new Runnable() {
                     public void run() {
                            new ReturnBook().setVisible(true);
                     }
              });
       }

       // Variables declaration - do not modify//GEN-BEGIN:variables
       private javax.swing.JMenuItem AboutUsMenuItem;
       private javax.swing.JMenuItem AddBookMenuItem8;
       private javax.swing.JMenuItem AddMemberMenuItem;
       private javax.swing.JTextField BookNameBox;
       private javax.swing.JComboBox<String> BookNameCombo;
       private javax.swing.JLabel BookNameLabel;
       private javax.swing.JTextField BookNumberBox;
       private javax.swing.JLabel BookNumberLabel;
       private javax.swing.JButton ClearButton;
       private javax.swing.JTextField DateOfReturnBox;
       private javax.swing.JMenuItem DeleteBookMenuButton;
       private javax.swing.JMenuItem DeleteMemberMenuItem;
       private javax.swing.JMenuItem EditBookMenuItem;
       private javax.swing.JMenuItem EditMemberMenuItem;
       private javax.swing.JButton ExitButton;
       private javax.swing.JMenuItem ExitMenuItem;
       private javax.swing.JButton GetDetailsButton;
       private javax.swing.JMenuItem IssueBookMenuItem;
       private javax.swing.JTextField IssuedCopiesBox;
       private javax.swing.JLabel IssuedCopiesLabel;
       private javax.swing.JTextField MemberNameBox;
       private javax.swing.JLabel MemberNameLabel;
       private javax.swing.JTextField MemberNumberBox;
       private javax.swing.JLabel MemberNumberLabel;
       private javax.swing.JButton MenuButton;
       private javax.swing.JTextField NoOfCopiesBox;
       private javax.swing.JLabel NoOfCopiesLabel;
       private javax.swing.JTextField PhoneBox;
       private javax.swing.JLabel PhoneLabel;
       private javax.swing.JMenuItem PurchaseBookMenuItem;
       private javax.swing.JButton ReturnBookButton;
       private javax.swing.JMenuItem SearchBookMenuItem;
       private javax.swing.JMenuItem SearchMemberMenuItem;
       private javax.swing.JMenuItem ShortcutsMenuItem;
       private javax.swing.JMenuItem ViewBooksMenuItem;
       private javax.swing.JMenuItem ViewIssuesMenuItem;
       private javax.swing.JMenuItem ViewMembersMenuItem;
       private javax.swing.JMenuItem ViewPurchasesMenuItem;
       private javax.swing.JMenuItem ViewReturnsMenuItem;
       private javax.swing.JDialog jDialog1;
       private javax.swing.JDialog jDialog2;
       private javax.swing.JLabel jLabel1;
       private javax.swing.JLabel jLabel2;
       private javax.swing.JLabel jLabel8;
       private javax.swing.JMenu jMenu11;
       private javax.swing.JMenu jMenu12;
       private javax.swing.JMenuBar jMenuBar9;
       private javax.swing.JPopupMenu.Separator jSeparator1;
       private javax.swing.JPopupMenu.Separator jSeparator2;
       private javax.swing.JPopupMenu.Separator jSeparator3;
       private javax.swing.JPopupMenu.Separator jSeparator4;
       private javax.swing.JPopupMenu.Separator jSeparator5;
       private javax.swing.JPopupMenu.Separator jSeparator6;
       private javax.swing.JPopupMenu.Separator jSeparator7;
       private javax.swing.JPopupMenu.Separator jSeparator8;
       private javax.swing.JPopupMenu.Separator jSeparator9;
       // End of variables declaration//GEN-END:variables

       private void SetIcon() {
              setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("appIcon.png")));
       }
}
