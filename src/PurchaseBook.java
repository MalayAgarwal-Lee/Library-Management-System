import com.sun.glass.events.KeyEvent;
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Malay Agarwal
 */
public class PurchaseBook extends javax.swing.JFrame {

       /**
        * Creates new form PurchaseBook
        */
       public PurchaseBook() {
              initComponents();
              SetIcon();
              
              BookNameBox.requestFocusInWindow();
       }

       /**
        * This method is called from within the constructor to initialize the form.
        * WARNING: Do NOT modify this code. The content of this method is always
        * regenerated by the Form Editor.
        */
       @SuppressWarnings("unchecked")
       // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
       private void initComponents() {

              jLabel1 = new javax.swing.JLabel();
              BookNameLabel = new javax.swing.JLabel();
              BookNameBox = new javax.swing.JTextField();
              BookNumberLabel = new javax.swing.JLabel();
              BookNumberBox = new javax.swing.JTextField();
              AuthorLabel = new javax.swing.JLabel();
              AuthorBox = new javax.swing.JTextField();
              PublisherLabel = new javax.swing.JLabel();
              PublisherBox = new javax.swing.JTextField();
              AvailStockLabel = new javax.swing.JLabel();
              AvailStockBox = new javax.swing.JTextField();
              NoOfCopiesLabel = new javax.swing.JLabel();
              GetDetailsButton = new javax.swing.JButton();
              NoOfCopiesBox = new javax.swing.JTextField();
              DateOfPurchaseLabel = new javax.swing.JLabel();
              DateOfPurchaseBox = new javax.swing.JTextField();
              PurchaseTypeLabel = new javax.swing.JLabel();
              CostPerCopyLabel = new javax.swing.JLabel();
              PurchaseTypeCombo = new javax.swing.JComboBox<>();
              CostPerCopyBox = new javax.swing.JTextField();
              TotalCostLabel = new javax.swing.JLabel();
              TotalCostBox = new javax.swing.JTextField();
              PurchaseBookButton = new javax.swing.JButton();
              ClearButton = new javax.swing.JButton();
              MainMenuButton = new javax.swing.JButton();
              ExitButton = new javax.swing.JButton();
              jMenuBar1 = new javax.swing.JMenuBar();
              jMenu1 = new javax.swing.JMenu();
              AddBookMenuItem = new javax.swing.JMenuItem();
              AddMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator2 = new javax.swing.JPopupMenu.Separator();
              IssueBookMenuItem = new javax.swing.JMenuItem();
              ReturnBookMenuItem = new javax.swing.JMenuItem();
              jSeparator3 = new javax.swing.JPopupMenu.Separator();
              SearchBookMenuItem = new javax.swing.JMenuItem();
              jSeparator8 = new javax.swing.JPopupMenu.Separator();
              ViewIssuesMenuItem = new javax.swing.JMenuItem();
              ViewReturnsMenuItem = new javax.swing.JMenuItem();
              ViewPurchasesMenuItem = new javax.swing.JMenuItem();
              jSeparator4 = new javax.swing.JPopupMenu.Separator();
              SearchMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator5 = new javax.swing.JPopupMenu.Separator();
              DeleteBookMenuButton = new javax.swing.JMenuItem();
              DeleteMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator6 = new javax.swing.JPopupMenu.Separator();
              EditBookMenuItem = new javax.swing.JMenuItem();
              EditMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator7 = new javax.swing.JPopupMenu.Separator();
              ViewBooksMenuItem = new javax.swing.JMenuItem();
              ViewMembersMenuItem = new javax.swing.JMenuItem();
              jSeparator1 = new javax.swing.JPopupMenu.Separator();
              ExitMenuItem = new javax.swing.JMenuItem();
              jMenu2 = new javax.swing.JMenu();
              ShortcutsMenuItem = new javax.swing.JMenuItem();
              jSeparator9 = new javax.swing.JPopupMenu.Separator();
              AboutUsMenuItem = new javax.swing.JMenuItem();

              setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
              setTitle("Purchase stock");
              setResizable(false);

              jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
              jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
              jLabel1.setText("PURCHASE STOCK");

              BookNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNameLabel.setText("Enter book name:");

              BookNameBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNameBox.setNextFocusableComponent(NoOfCopiesBox);
              BookNameBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            BookNameBoxKeyPressed(evt);
                     }
              });

              BookNumberLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNumberLabel.setText("Book number:");
              BookNumberLabel.setEnabled(false);

              BookNumberBox.setEditable(false);
              BookNumberBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNumberBox.setEnabled(false);

              AuthorLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              AuthorLabel.setText("Author:");
              AuthorLabel.setEnabled(false);

              AuthorBox.setEditable(false);
              AuthorBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              AuthorBox.setEnabled(false);

              PublisherLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PublisherLabel.setText("Publisher:");
              PublisherLabel.setEnabled(false);

              PublisherBox.setEditable(false);
              PublisherBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PublisherBox.setEnabled(false);

              AvailStockLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              AvailStockLabel.setText("Available stock:");
              AvailStockLabel.setEnabled(false);

              AvailStockBox.setEditable(false);
              AvailStockBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              AvailStockBox.setEnabled(false);

              NoOfCopiesLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              NoOfCopiesLabel.setText("Number of copies:");

              GetDetailsButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              GetDetailsButton.setText("Get details");
              GetDetailsButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            GetDetailsButtonActionPerformed(evt);
                     }
              });

              NoOfCopiesBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              NoOfCopiesBox.setNextFocusableComponent(DateOfPurchaseBox);
              NoOfCopiesBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            NoOfCopiesBoxKeyPressed(evt);
                     }
              });

              DateOfPurchaseLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              DateOfPurchaseLabel.setText("Date of purchase (dd/mm/yyyy):");

              DateOfPurchaseBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              DateOfPurchaseBox.setNextFocusableComponent(PurchaseTypeCombo);
              DateOfPurchaseBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            DateOfPurchaseBoxKeyPressed(evt);
                     }
              });

              PurchaseTypeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PurchaseTypeLabel.setText("Type of purchase:");

              CostPerCopyLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              CostPerCopyLabel.setText("Cost per copy:");

              PurchaseTypeCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PurchaseTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Select>", "Online", "Wholesale" }));
              PurchaseTypeCombo.setNextFocusableComponent(CostPerCopyBox);

              CostPerCopyBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              CostPerCopyBox.setNextFocusableComponent(PurchaseBookButton);
              CostPerCopyBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            CostPerCopyBoxKeyPressed(evt);
                     }
              });

              TotalCostLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              TotalCostLabel.setText("Total cost:");
              TotalCostLabel.setEnabled(false);

              TotalCostBox.setEditable(false);
              TotalCostBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              TotalCostBox.setEnabled(false);

              PurchaseBookButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              PurchaseBookButton.setText("Purchase book");
              PurchaseBookButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            PurchaseBookButtonActionPerformed(evt);
                     }
              });

              ClearButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ClearButton.setMnemonic('C');
              ClearButton.setText("Clear");
              ClearButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ClearButtonActionPerformed(evt);
                     }
              });

              MainMenuButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              MainMenuButton.setMnemonic('M');
              MainMenuButton.setText("Main menu");
              MainMenuButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            MainMenuButtonActionPerformed(evt);
                     }
              });

              ExitButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ExitButton.setText("Exit");
              ExitButton.setNextFocusableComponent(BookNameBox);
              ExitButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ExitButtonActionPerformed(evt);
                     }
              });

              jMenu1.setText("Quick Actions");
              jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

              AddBookMenuItem.setText("Add a book");
              AddBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AddBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(AddBookMenuItem);

              AddMemberMenuItem.setText("Add a member");
              AddMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AddMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(AddMemberMenuItem);
              jMenu1.add(jSeparator2);

              IssueBookMenuItem.setText("Issue a book");
              IssueBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            IssueBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(IssueBookMenuItem);

              ReturnBookMenuItem.setText("Return a book");
              ReturnBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ReturnBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ReturnBookMenuItem);
              jMenu1.add(jSeparator3);

              SearchBookMenuItem.setText("Search for a book");
              SearchBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SearchBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(SearchBookMenuItem);
              jMenu1.add(jSeparator8);

              ViewIssuesMenuItem.setText("View issues");
              ViewIssuesMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewIssuesMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ViewIssuesMenuItem);

              ViewReturnsMenuItem.setText("View returns");
              ViewReturnsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewReturnsMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ViewReturnsMenuItem);

              ViewPurchasesMenuItem.setText("View purchases");
              ViewPurchasesMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewPurchasesMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ViewPurchasesMenuItem);
              jMenu1.add(jSeparator4);

              SearchMemberMenuItem.setText("Search for a member");
              SearchMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SearchMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(SearchMemberMenuItem);
              jMenu1.add(jSeparator5);

              DeleteBookMenuButton.setText("Delete a book");
              DeleteBookMenuButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DeleteBookMenuButtonActionPerformed(evt);
                     }
              });
              jMenu1.add(DeleteBookMenuButton);

              DeleteMemberMenuItem.setText("Delete a member");
              DeleteMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DeleteMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(DeleteMemberMenuItem);
              jMenu1.add(jSeparator6);

              EditBookMenuItem.setText("Edit information of a book");
              EditBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            EditBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(EditBookMenuItem);

              EditMemberMenuItem.setText("Edit information of a member");
              EditMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            EditMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(EditMemberMenuItem);
              jMenu1.add(jSeparator7);

              ViewBooksMenuItem.setText("View all books");
              ViewBooksMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewBooksMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ViewBooksMenuItem);

              ViewMembersMenuItem.setText("View all members");
              ViewMembersMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewMembersMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ViewMembersMenuItem);
              jMenu1.add(jSeparator1);

              ExitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              ExitMenuItem.setText("Exit");
              ExitMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ExitMenuItemActionPerformed(evt);
                     }
              });
              jMenu1.add(ExitMenuItem);

              jMenuBar1.add(jMenu1);

              jMenu2.setText("Help");
              jMenu2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

              ShortcutsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              ShortcutsMenuItem.setText("Shortcuts");
              ShortcutsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ShortcutsMenuItemActionPerformed(evt);
                     }
              });
              jMenu2.add(ShortcutsMenuItem);
              jMenu2.add(jSeparator9);

              AboutUsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              AboutUsMenuItem.setText("About us");
              AboutUsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AboutUsMenuItemActionPerformed(evt);
                     }
              });
              jMenu2.add(AboutUsMenuItem);

              jMenuBar1.add(jMenu2);

              setJMenuBar(jMenuBar1);

              javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
              getContentPane().setLayout(layout);
              layout.setHorizontalGroup(
                     layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                            .addGap(34, 34, 34)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                   .addGroup(layout.createSequentialGroup()
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                 .addComponent(AvailStockLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                 .addComponent(PublisherLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                 .addComponent(AuthorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                 .addComponent(BookNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                 .addComponent(BookNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                                          .addGap(38, 38, 38)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                 .addComponent(BookNameBox, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                 .addComponent(BookNumberBox)
                                                 .addComponent(AuthorBox)
                                                 .addComponent(PublisherBox)
                                                 .addComponent(AvailStockBox)))
                                   .addGroup(layout.createSequentialGroup()
                                          .addComponent(PurchaseBookButton)
                                          .addGap(18, 18, 18)
                                          .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addComponent(jLabel1)
                                   .addGroup(layout.createSequentialGroup()
                                          .addComponent(GetDetailsButton)
                                          .addGap(78, 78, 78)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                 .addGroup(layout.createSequentialGroup()
                                                        .addComponent(MainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                 .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                               .addComponent(TotalCostLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                               .addComponent(CostPerCopyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                               .addComponent(PurchaseTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                               .addComponent(NoOfCopiesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                               .addComponent(DateOfPurchaseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGap(34, 34, 34)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                               .addComponent(TotalCostBox)
                                                               .addComponent(NoOfCopiesBox, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                               .addComponent(DateOfPurchaseBox)
                                                               .addComponent(PurchaseTypeCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                               .addComponent(CostPerCopyBox, javax.swing.GroupLayout.Alignment.TRAILING))))))
                            .addContainerGap(29, Short.MAX_VALUE))
              );
              layout.setVerticalGroup(
                     layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(BookNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(BookNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(NoOfCopiesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(NoOfCopiesBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                   .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                          .addComponent(BookNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                          .addComponent(BookNumberBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                          .addComponent(DateOfPurchaseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                          .addComponent(DateOfPurchaseBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                   .addComponent(GetDetailsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(AuthorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(AuthorBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(PurchaseTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(PurchaseTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(PublisherLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(PublisherBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(CostPerCopyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(CostPerCopyBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(AvailStockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(AvailStockBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(TotalCostLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(TotalCostBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(42, 42, 42)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(PurchaseBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(MainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(44, 44, 44))
              );

              pack();
       }// </editor-fold>//GEN-END:initComponents

       
       public void GetDetails(){
              int c = 0;
              
              if (!BookNameBox.getText().equals("")){
                     
                     try{
                            
                            Class.forName("com.mysql.jdbc.Driver");
                            
                            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/library", "root", "password");
                            
                            Statement stmt = con.createStatement();
                            String query = "select bookNo, author, publisher, stock from books where bookName = '"+BookNameBox.getText()+"';";
                            
                            ResultSet rs = stmt.executeQuery(query);
                            
                            while (rs.next()){
                                   c = 1;
                                   
                                   BookNumberBox.setEnabled(true);
                                   BookNumberLabel.setEnabled(true);
                                   AuthorBox.setEnabled(true);
                                   AuthorLabel.setEnabled(true);
                                   PublisherBox.setEnabled(true);
                                   PublisherLabel.setEnabled(true);
                                   AvailStockBox.setEnabled(true);
                                   AvailStockLabel.setEnabled(true);
                                   
                                   BookNumberBox.setText(rs.getString(1));
                                   AuthorBox.setText(rs.getString(2));
                                   PublisherBox.setText(rs.getString(3));
                                   AvailStockBox.setText(rs.getString(4));
                                   
                                   NoOfCopiesBox.requestFocusInWindow();
                            }
                            
                            if (c != 1){
                                   JOptionPane.showMessageDialog(null, "This book is not available in the library.");
                                   BookNameBox.requestFocusInWindow();
                            }
                     }
                     catch(Exception e){
                            JOptionPane.showMessageDialog(null, "A database error occured.");
                     }
              }
              else{
                     JOptionPane.showMessageDialog(null, "Please enter a value in the book name field.");
              }
       }
       
       public void Clear(){
              
              BookNumberBox.setEnabled(false);
              BookNumberLabel.setEnabled(false);
              AuthorBox.setEnabled(false);
              AuthorLabel.setEnabled(false);
              PublisherBox.setEnabled(false);
              PublisherLabel.setEnabled(false);
              AvailStockBox.setEnabled(false);
              AvailStockLabel.setEnabled(false);
              TotalCostBox.setEnabled(false);
              TotalCostLabel.setEnabled(false);
                            
              BookNameBox.setText("");
              BookNumberBox.setText("");
              AuthorBox.setText("");
              PublisherBox.setText("");
              AvailStockBox.setText("");
              NoOfCopiesBox.setText("");
              DateOfPurchaseBox.setText("");
                            
              PurchaseTypeCombo.setSelectedIndex(-1);
                            
              CostPerCopyBox.setText("");
              TotalCostBox.setText("");
              
              BookNameBox.requestFocusInWindow();
              
       }
       
       
       private void PurchaseBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseBookButtonActionPerformed
              if (!NoOfCopiesBox.getText().equals("") && !DateOfPurchaseBox.getText().equals("") && !CostPerCopyBox.getText().equals("")){
              
                     TotalCostBox.setEnabled(true);
                     TotalCostLabel.setEnabled(true);
              
                     TotalCostBox.setText(Float.toString(Float.parseFloat(NoOfCopiesBox.getText())*Float.parseFloat(CostPerCopyBox.getText())));
              
                     try{
                     
                            Class.forName("com.mysql.jdbc.Driver");
                     
                            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/library", "root", "password");
                     
                            if (PurchaseTypeCombo.getSelectedIndex() != 0){
                            
                                   if (JOptionPane.showConfirmDialog(null, "Are you sure?") == JOptionPane.YES_OPTION){
                                   
                                          String query = "insert into purchases (bookNo, bookName, noOfCopies, dateOfPurchase, type, costPerCopy, totalCost)" + " values (?, ?, ?, ?, ?, ?, ?);";
                                   
                                          String dop = DateOfPurchaseBox.getText().substring(6, 10) + DateOfPurchaseBox.getText().substring(2, 6) + DateOfPurchaseBox.getText().substring(0, 2);
                                   
                                          PreparedStatement stmt = con.prepareStatement(query);
                                          stmt.setString(1, BookNumberBox.getText());
                                          stmt.setString(2, BookNameBox.getText());
                                          stmt.setString(3, NoOfCopiesBox.getText());
                                          stmt.setString(4, dop);
                                          stmt.setString(5, PurchaseTypeCombo.getSelectedItem().toString());
                                          stmt.setString(6, CostPerCopyBox.getText());
                                          stmt.setString(7, TotalCostBox.getText());
                                          stmt.execute();
                                   
                                          Statement stmt1 = con.createStatement();
                                          String query1 = "update books set stock = stock + " + NoOfCopiesBox.getText() + " where bookNo = " + BookNumberBox.getText() + ";"; 
                                          stmt1.executeUpdate(query1);
                                   
                                          Statement stmt2 = con.createStatement();
                                          String query2 = "update books set balance = balance + " + NoOfCopiesBox.getText() + " where bookNo = " + BookNumberBox.getText() + ";";
                                          stmt2.executeLargeUpdate(query2);
                                   
                                          JOptionPane.showMessageDialog(null, "Stock purchased successfully!");
                                   
                                          stmt.close();
                                          stmt2.close();
                                          stmt1.close();
                                   }
                            
                            Clear();
                            }
                            
                            else{
                                   JOptionPane.showMessageDialog(null, "Please select the type of purchase.");
                            }
                            
                            con.close(); 
                     }
                     
                     catch(Exception e){
                            JOptionPane.showMessageDialog(null, "A database connection occured.");
                     }
              }
              else{
                     
                     JOptionPane.showMessageDialog(null, "One or more than one fields are empty.");
              }
       }//GEN-LAST:event_PurchaseBookButtonActionPerformed

       private void GetDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetDetailsButtonActionPerformed
              GetDetails();
       }//GEN-LAST:event_GetDetailsButtonActionPerformed

       private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
              Clear();
       }//GEN-LAST:event_ClearButtonActionPerformed

       private void MainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainMenuButtonActionPerformed
              this.setVisible(false);
              MainPage page = new MainPage();
              page.setVisible(true);
       }//GEN-LAST:event_MainMenuButtonActionPerformed

       private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
              System.exit(0);
       }//GEN-LAST:event_ExitButtonActionPerformed

       private void BookNameBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BookNameBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     GetDetailsButton.doClick();
              }
       }//GEN-LAST:event_BookNameBoxKeyPressed

       private void NoOfCopiesBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NoOfCopiesBoxKeyPressed
            if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                   
                   PurchaseBookButton.doClick();
            }
       }//GEN-LAST:event_NoOfCopiesBoxKeyPressed

       private void DateOfPurchaseBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DateOfPurchaseBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                   
                   PurchaseBookButton.doClick();
            }
       }//GEN-LAST:event_DateOfPurchaseBoxKeyPressed

       private void CostPerCopyBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CostPerCopyBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                   
                   PurchaseBookButton.doClick();
            }
       }//GEN-LAST:event_CostPerCopyBoxKeyPressed

       private void AddBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookMenuItemActionPerformed
              this.setVisible(false);
              AddBook books = new AddBook();
              books.setVisible(true);
       }//GEN-LAST:event_AddBookMenuItemActionPerformed

       private void AddMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMemberMenuItemActionPerformed
              this.setVisible(false);
              AddMember member = new AddMember();
              member.setVisible(true);
       }//GEN-LAST:event_AddMemberMenuItemActionPerformed

       private void IssueBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueBookMenuItemActionPerformed
              this.setVisible(false);
              IssueBook issues = new IssueBook();
              issues.setVisible(true);
       }//GEN-LAST:event_IssueBookMenuItemActionPerformed

       private void ReturnBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnBookMenuItemActionPerformed
              this.setVisible(false);
              ReturnBook returns = new ReturnBook();
              returns.setVisible(true);
       }//GEN-LAST:event_ReturnBookMenuItemActionPerformed

       private void SearchBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBookMenuItemActionPerformed
              this.setVisible(false);
              SearchBook search = new SearchBook();
              search.setVisible(true);
       }//GEN-LAST:event_SearchBookMenuItemActionPerformed

       private void ViewIssuesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewIssuesMenuItemActionPerformed
              this.setVisible(false);
              ViewIssues issues = new ViewIssues();
              issues.setVisible(true);
       }//GEN-LAST:event_ViewIssuesMenuItemActionPerformed

       private void ViewPurchasesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewPurchasesMenuItemActionPerformed
              this.setVisible(false);
              ViewPurchases purchase = new ViewPurchases();
              purchase.setVisible(true);
       }//GEN-LAST:event_ViewPurchasesMenuItemActionPerformed

       private void SearchMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchMemberMenuItemActionPerformed
              this.setVisible(false);
              SearchMember search = new SearchMember();
              search.setVisible(true);
       }//GEN-LAST:event_SearchMemberMenuItemActionPerformed

       private void DeleteMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteMemberMenuItemActionPerformed
              this.setVisible(false);
              new DeleteMember().setVisible(true);
       }//GEN-LAST:event_DeleteMemberMenuItemActionPerformed

       private void EditBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBookMenuItemActionPerformed
              this.setVisible(false);
              new EditBook().setVisible(true);
       }//GEN-LAST:event_EditBookMenuItemActionPerformed

       private void EditMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditMemberMenuItemActionPerformed
              this.setVisible(false);
              new EditMember().setVisible(true);
       }//GEN-LAST:event_EditMemberMenuItemActionPerformed

       private void ViewBooksMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBooksMenuItemActionPerformed
              this.setVisible(false);
              new ViewBooks().setVisible(true);
       }//GEN-LAST:event_ViewBooksMenuItemActionPerformed

       private void ViewMembersMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewMembersMenuItemActionPerformed
              this.setVisible(false);
              new ViewMembers().setVisible(true);
       }//GEN-LAST:event_ViewMembersMenuItemActionPerformed

       private void ExitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuItemActionPerformed
              System.exit(0);
       }//GEN-LAST:event_ExitMenuItemActionPerformed

       private void DeleteBookMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBookMenuButtonActionPerformed
              this.setVisible(false);
              DeleteBook deleteBook = new DeleteBook();
              deleteBook.setVisible(true);
       }//GEN-LAST:event_DeleteBookMenuButtonActionPerformed

       private void ViewReturnsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReturnsMenuItemActionPerformed
              this.setVisible(false);
              ViewReturns returns = new ViewReturns();
              returns.setVisible(true);
       }//GEN-LAST:event_ViewReturnsMenuItemActionPerformed

       private void ShortcutsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShortcutsMenuItemActionPerformed
              ShortcutsPage page = new ShortcutsPage();
              page.setVisible(true);
              page.setLocationRelativeTo(this);
       }//GEN-LAST:event_ShortcutsMenuItemActionPerformed

       private void AboutUsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutUsMenuItemActionPerformed
              AboutUsPage page = new AboutUsPage();
              page.setVisible(true);
              page.setLocationRelativeTo(this);
       }//GEN-LAST:event_AboutUsMenuItemActionPerformed

       /**
        * @param args the command line arguments
        */
       public static void main(String args[]) {
              /* Set the Nimbus look and feel */
              //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
              /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
               */
              try {
                     for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                            if ("Windows".equals(info.getName())) {
                                   javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                   break;
                            }
                     }
              } catch (ClassNotFoundException ex) {
                     java.util.logging.Logger.getLogger(PurchaseBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (InstantiationException ex) {
                     java.util.logging.Logger.getLogger(PurchaseBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (IllegalAccessException ex) {
                     java.util.logging.Logger.getLogger(PurchaseBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                     java.util.logging.Logger.getLogger(PurchaseBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              }
              //</editor-fold>

              /* Create and display the form */
              java.awt.EventQueue.invokeLater(new Runnable() {
                     public void run() {
                            new PurchaseBook().setVisible(true);
                     }
              });
       }

       // Variables declaration - do not modify//GEN-BEGIN:variables
       private javax.swing.JMenuItem AboutUsMenuItem;
       private javax.swing.JMenuItem AddBookMenuItem;
       private javax.swing.JMenuItem AddMemberMenuItem;
       private javax.swing.JTextField AuthorBox;
       private javax.swing.JLabel AuthorLabel;
       private javax.swing.JTextField AvailStockBox;
       private javax.swing.JLabel AvailStockLabel;
       private javax.swing.JTextField BookNameBox;
       private javax.swing.JLabel BookNameLabel;
       private javax.swing.JTextField BookNumberBox;
       private javax.swing.JLabel BookNumberLabel;
       private javax.swing.JButton ClearButton;
       private javax.swing.JTextField CostPerCopyBox;
       private javax.swing.JLabel CostPerCopyLabel;
       private javax.swing.JTextField DateOfPurchaseBox;
       private javax.swing.JLabel DateOfPurchaseLabel;
       private javax.swing.JMenuItem DeleteBookMenuButton;
       private javax.swing.JMenuItem DeleteMemberMenuItem;
       private javax.swing.JMenuItem EditBookMenuItem;
       private javax.swing.JMenuItem EditMemberMenuItem;
       private javax.swing.JButton ExitButton;
       private javax.swing.JMenuItem ExitMenuItem;
       private javax.swing.JButton GetDetailsButton;
       private javax.swing.JMenuItem IssueBookMenuItem;
       private javax.swing.JButton MainMenuButton;
       private javax.swing.JTextField NoOfCopiesBox;
       private javax.swing.JLabel NoOfCopiesLabel;
       private javax.swing.JTextField PublisherBox;
       private javax.swing.JLabel PublisherLabel;
       private javax.swing.JButton PurchaseBookButton;
       private javax.swing.JComboBox<String> PurchaseTypeCombo;
       private javax.swing.JLabel PurchaseTypeLabel;
       private javax.swing.JMenuItem ReturnBookMenuItem;
       private javax.swing.JMenuItem SearchBookMenuItem;
       private javax.swing.JMenuItem SearchMemberMenuItem;
       private javax.swing.JMenuItem ShortcutsMenuItem;
       private javax.swing.JTextField TotalCostBox;
       private javax.swing.JLabel TotalCostLabel;
       private javax.swing.JMenuItem ViewBooksMenuItem;
       private javax.swing.JMenuItem ViewIssuesMenuItem;
       private javax.swing.JMenuItem ViewMembersMenuItem;
       private javax.swing.JMenuItem ViewPurchasesMenuItem;
       private javax.swing.JMenuItem ViewReturnsMenuItem;
       private javax.swing.JLabel jLabel1;
       private javax.swing.JMenu jMenu1;
       private javax.swing.JMenu jMenu2;
       private javax.swing.JMenuBar jMenuBar1;
       private javax.swing.JPopupMenu.Separator jSeparator1;
       private javax.swing.JPopupMenu.Separator jSeparator2;
       private javax.swing.JPopupMenu.Separator jSeparator3;
       private javax.swing.JPopupMenu.Separator jSeparator4;
       private javax.swing.JPopupMenu.Separator jSeparator5;
       private javax.swing.JPopupMenu.Separator jSeparator6;
       private javax.swing.JPopupMenu.Separator jSeparator7;
       private javax.swing.JPopupMenu.Separator jSeparator8;
       private javax.swing.JPopupMenu.Separator jSeparator9;
       // End of variables declaration//GEN-END:variables

       private void SetIcon() {
              setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("appIcon.png")));
       }
}
