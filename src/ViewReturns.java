import com.sun.glass.events.KeyEvent;
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Malay Agarwal
 */
public class ViewReturns extends javax.swing.JFrame {

       /**
        * Creates new form ViewReturns
        */
       public ViewReturns() {
              initComponents();
              
              SetIcon();
       }

       /**
        * This method is called from within the constructor to initialize the form.
        * WARNING: Do NOT modify this code. The content of this method is always
        * regenerated by the Form Editor.
        */
       @SuppressWarnings("unchecked")
       // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
       private void initComponents() {

              buttonGroup1 = new javax.swing.ButtonGroup();
              jScrollPane1 = new javax.swing.JScrollPane();
              ResultTable = new javax.swing.JTable();
              jLabel1 = new javax.swing.JLabel();
              DateLabel = new javax.swing.JLabel();
              DateBox = new javax.swing.JTextField();
              SearchTermLabel = new javax.swing.JLabel();
              SearchTermBox = new javax.swing.JTextField();
              GetReturnsButton = new javax.swing.JButton();
              ClearButton = new javax.swing.JButton();
              MenuButton = new javax.swing.JButton();
              ExitButton = new javax.swing.JButton();
              DateRadioButton = new javax.swing.JRadioButton();
              BookNameRadioButton = new javax.swing.JRadioButton();
              MemberNameRadioButton = new javax.swing.JRadioButton();
              SortByLabel = new javax.swing.JLabel();
              SortByCombo = new javax.swing.JComboBox<>();
              jLabel2 = new javax.swing.JLabel();
              jMenuBar5 = new javax.swing.JMenuBar();
              jMenu7 = new javax.swing.JMenu();
              AddBookMenuItem4 = new javax.swing.JMenuItem();
              AddMemberMenuItem2 = new javax.swing.JMenuItem();
              jSeparator19 = new javax.swing.JPopupMenu.Separator();
              IssueBookMenuItem2 = new javax.swing.JMenuItem();
              ReturnBookMenuItem2 = new javax.swing.JMenuItem();
              PurchaseBookMenuItem = new javax.swing.JMenuItem();
              jSeparator21 = new javax.swing.JPopupMenu.Separator();
              SearchBookMenuItem = new javax.swing.JMenuItem();
              jSeparator24 = new javax.swing.JPopupMenu.Separator();
              ViewIssuesMenuItem = new javax.swing.JMenuItem();
              ViewPurchasesMenuItem = new javax.swing.JMenuItem();
              jSeparator22 = new javax.swing.JPopupMenu.Separator();
              SearchMemberMenuItem = new javax.swing.JMenuItem();
              jSeparator2 = new javax.swing.JPopupMenu.Separator();
              DeleteBookMenuButton2 = new javax.swing.JMenuItem();
              DeleteMemberMenuItem2 = new javax.swing.JMenuItem();
              jSeparator1 = new javax.swing.JPopupMenu.Separator();
              EditBookMenuItem2 = new javax.swing.JMenuItem();
              EditMemberMenuItem2 = new javax.swing.JMenuItem();
              jSeparator25 = new javax.swing.JPopupMenu.Separator();
              ViewBooksMenuItem2 = new javax.swing.JMenuItem();
              ViewMembersMenuItem2 = new javax.swing.JMenuItem();
              jSeparator26 = new javax.swing.JPopupMenu.Separator();
              ExitMenuItem2 = new javax.swing.JMenuItem();
              jMenu8 = new javax.swing.JMenu();
              ShortcutsMenuItem = new javax.swing.JMenuItem();
              jSeparator27 = new javax.swing.JPopupMenu.Separator();
              AboutUsMenuItem = new javax.swing.JMenuItem();

              setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
              setTitle("View returns");
              setResizable(false);

              ResultTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ResultTable.setModel(new javax.swing.table.DefaultTableModel(
                     new Object [][] {

                     },
                     new String [] {
                            "Book Number", "Book Name", "Member Number", "Member Name", "Date of Return", "No of Copies"
                     }
              ) {
                     boolean[] canEdit = new boolean [] {
                            false, false, false, false, false, false
                     };

                     public boolean isCellEditable(int rowIndex, int columnIndex) {
                            return canEdit [columnIndex];
                     }
              });
              jScrollPane1.setViewportView(ResultTable);

              jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
              jLabel1.setText("VIEW RETURNS");

              DateLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              DateLabel.setText("Enter date (dd/mm/yyyy):");
              DateLabel.setEnabled(false);

              DateBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              DateBox.setEnabled(false);
              DateBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            DateBoxKeyPressed(evt);
                     }
              });

              SearchTermLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              SearchTermLabel.setText("Enter search term:");
              SearchTermLabel.setEnabled(false);

              SearchTermBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              SearchTermBox.setEnabled(false);
              SearchTermBox.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            SearchTermBoxKeyPressed(evt);
                     }
              });

              GetReturnsButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              GetReturnsButton.setText("Get returns");
              GetReturnsButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            GetReturnsButtonActionPerformed(evt);
                     }
              });

              ClearButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ClearButton.setMnemonic('C');
              ClearButton.setText("Clear");
              ClearButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ClearButtonActionPerformed(evt);
                     }
              });

              MenuButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              MenuButton.setMnemonic('M');
              MenuButton.setText("Main menu");
              MenuButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            MenuButtonActionPerformed(evt);
                     }
              });

              ExitButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              ExitButton.setText("Exit");
              ExitButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ExitButtonActionPerformed(evt);
                     }
              });

              buttonGroup1.add(DateRadioButton);
              DateRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              DateRadioButton.setText("Get returns by date.");
              DateRadioButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DateRadioButtonActionPerformed(evt);
                     }
              });

              buttonGroup1.add(BookNameRadioButton);
              BookNameRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              BookNameRadioButton.setText("Get returns by book name.");
              BookNameRadioButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            BookNameRadioButtonActionPerformed(evt);
                     }
              });

              buttonGroup1.add(MemberNameRadioButton);
              MemberNameRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              MemberNameRadioButton.setText("Get returns by member name.");
              MemberNameRadioButton.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            MemberNameRadioButtonActionPerformed(evt);
                     }
              });

              SortByLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              SortByLabel.setText("Sort by:");

              SortByCombo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              SortByCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default (Book Number)", "Book name", "Member Number", "Member Name", "No. of Copies", "Date of Return" }));
              SortByCombo.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SortByComboActionPerformed(evt);
                     }
              });
              SortByCombo.addKeyListener(new java.awt.event.KeyAdapter() {
                     public void keyPressed(java.awt.event.KeyEvent evt) {
                            SortByComboKeyPressed(evt);
                     }
              });

              jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
              jLabel2.setText("After entering a value in the box, click on the Get returns button or press enter.");

              jMenu7.setText("Quick Actions");
              jMenu7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

              AddBookMenuItem4.setText("Add a book");
              AddBookMenuItem4.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AddBookMenuItem4ActionPerformed(evt);
                     }
              });
              jMenu7.add(AddBookMenuItem4);

              AddMemberMenuItem2.setText("Add a member");
              AddMemberMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AddMemberMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu7.add(AddMemberMenuItem2);
              jMenu7.add(jSeparator19);

              IssueBookMenuItem2.setText("Issue a book");
              IssueBookMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            IssueBookMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu7.add(IssueBookMenuItem2);

              ReturnBookMenuItem2.setText("Return a book");
              ReturnBookMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ReturnBookMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu7.add(ReturnBookMenuItem2);

              PurchaseBookMenuItem.setText("Purchase a book");
              PurchaseBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            PurchaseBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu7.add(PurchaseBookMenuItem);
              jMenu7.add(jSeparator21);

              SearchBookMenuItem.setText("Search for a book");
              SearchBookMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SearchBookMenuItemActionPerformed(evt);
                     }
              });
              jMenu7.add(SearchBookMenuItem);
              jMenu7.add(jSeparator24);

              ViewIssuesMenuItem.setText("View issues");
              ViewIssuesMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewIssuesMenuItemActionPerformed(evt);
                     }
              });
              jMenu7.add(ViewIssuesMenuItem);

              ViewPurchasesMenuItem.setText("View purchases");
              ViewPurchasesMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewPurchasesMenuItemActionPerformed(evt);
                     }
              });
              jMenu7.add(ViewPurchasesMenuItem);
              jMenu7.add(jSeparator22);

              SearchMemberMenuItem.setText("Search for a member");
              SearchMemberMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            SearchMemberMenuItemActionPerformed(evt);
                     }
              });
              jMenu7.add(SearchMemberMenuItem);
              jMenu7.add(jSeparator2);

              DeleteBookMenuButton2.setText("Delete a book");
              DeleteBookMenuButton2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DeleteBookMenuButton2ActionPerformed(evt);
                     }
              });
              jMenu7.add(DeleteBookMenuButton2);

              DeleteMemberMenuItem2.setText("Delete a member");
              DeleteMemberMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            DeleteMemberMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu7.add(DeleteMemberMenuItem2);
              jMenu7.add(jSeparator1);

              EditBookMenuItem2.setText("Edit information of a book");
              EditBookMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            EditBookMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu7.add(EditBookMenuItem2);

              EditMemberMenuItem2.setText("Edit information of a member");
              EditMemberMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            EditMemberMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu7.add(EditMemberMenuItem2);
              jMenu7.add(jSeparator25);

              ViewBooksMenuItem2.setText("View all books");
              ViewBooksMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewBooksMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu7.add(ViewBooksMenuItem2);

              ViewMembersMenuItem2.setText("View all members");
              ViewMembersMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ViewMembersMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu7.add(ViewMembersMenuItem2);
              jMenu7.add(jSeparator26);

              ExitMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              ExitMenuItem2.setText("Exit");
              ExitMenuItem2.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            ExitMenuItem2ActionPerformed(evt);
                     }
              });
              jMenu7.add(ExitMenuItem2);

              jMenuBar5.add(jMenu7);

              jMenu8.setText("Help");
              jMenu8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

              ShortcutsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              ShortcutsMenuItem.setText("Shortcuts");
              jMenu8.add(ShortcutsMenuItem);
              jMenu8.add(jSeparator27);

              AboutUsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
              AboutUsMenuItem.setText("About us");
              AboutUsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                     public void actionPerformed(java.awt.event.ActionEvent evt) {
                            AboutUsMenuItemActionPerformed(evt);
                     }
              });
              jMenu8.add(AboutUsMenuItem);

              jMenuBar5.add(jMenu8);

              setJMenuBar(jMenuBar5);

              javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
              getContentPane().setLayout(layout);
              layout.setHorizontalGroup(
                     layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                            .addContainerGap(34, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                          .addComponent(jLabel1)
                                          .addGap(419, 419, 419))
                                   .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                 .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                               .addComponent(SearchTermLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                               .addComponent(DateLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(18, 18, 18)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                               .addComponent(MenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                               .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                      .addGroup(layout.createSequentialGroup()
                                                                             .addComponent(DateBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                             .addGap(18, 18, 18)
                                                                             .addComponent(GetReturnsButton))
                                                                      .addGroup(layout.createSequentialGroup()
                                                                             .addComponent(SearchTermBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                             .addGap(18, 18, 18)
                                                                             .addComponent(ClearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                                        .addGap(18, 18, 18)
                                                        .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(70, 70, 70)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                               .addComponent(MemberNameRadioButton)
                                                               .addGroup(layout.createSequentialGroup()
                                                                      .addComponent(SortByLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                      .addGap(18, 18, 18)
                                                                      .addComponent(SortByCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                               .addGroup(layout.createSequentialGroup()
                                                                      .addComponent(DateRadioButton)
                                                                      .addGap(18, 18, 18)
                                                                      .addComponent(BookNameRadioButton))))
                                                 .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1003, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                 .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                          .addGap(34, 34, 34))))
              );
              layout.setVerticalGroup(
                     layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1)
                            .addGap(14, 14, 14)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(DateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(DateBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(GetReturnsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(DateRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(BookNameRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(SearchTermLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(SearchTermBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(MemberNameRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(MenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(SortByLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(SortByCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(38, 38, 38)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addContainerGap())
              );

              pack();
       }// </editor-fold>//GEN-END:initComponents

       private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
              System.exit(0);
       }//GEN-LAST:event_ExitButtonActionPerformed

       private void DateRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateRadioButtonActionPerformed
              JRadioButton rb = (JRadioButton)evt.getSource();
              DefaultTableModel model = (DefaultTableModel)ResultTable.getModel();
              
              if (rb.isSelected()){
                     
                     DateLabel.setEnabled(true);
                     DateBox.setEnabled(true);
                     SearchTermLabel.setEnabled(false);
                     SearchTermBox.setEnabled(false);
                     
                     DateBox.setText("");
                     SearchTermBox.setText("");
                     
                     model.setRowCount(0);
                     SortByCombo.setSelectedIndex(0);
                     
                     DateBox.requestFocusInWindow();
              }
       }//GEN-LAST:event_DateRadioButtonActionPerformed

       private void MemberNameRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberNameRadioButtonActionPerformed
              JRadioButton rb = (JRadioButton)evt.getSource();
              DefaultTableModel model = (DefaultTableModel)ResultTable.getModel();
              
              if (rb.isSelected()){
                     
                     DateLabel.setEnabled(false);
                     DateBox.setEnabled(false);
                     SearchTermLabel.setEnabled(true);
                     SearchTermBox.setEnabled(true);
                     
                     DateBox.setText("");
                     SearchTermBox.setText("");
                     
                     SearchTermBox.requestFocusInWindow();
                     
                     model.setRowCount(0);
                     SortByCombo.setSelectedIndex(0);
                     
              }
       }//GEN-LAST:event_MemberNameRadioButtonActionPerformed

       private void GetReturnsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetReturnsButtonActionPerformed
              DefaultTableModel model = (DefaultTableModel)ResultTable.getModel();
              
              model.setRowCount(0);
              
              int c = 0;
              int index = SortByCombo.getSelectedIndex();
              
              try{
                     
                     Class.forName("com.mysql.jdbc.Driver");
                     Connection con = DriverManager.getConnection("jdbc:mysql://localhost/library", "root", "password");
                     
                     Statement stmt = con.createStatement();
                     String query = "";
                     
                     if (DateRadioButton.isSelected() && !DateBox.getText().equals("")){
                            
                            String dor = DateBox.getText().substring(6, 10) + "-" + DateBox.getText().substring(3, 5) + "-" + DateBox.getText().substring(0, 2);
                            
                            switch (index){
                                   
                                   case 0:
                                          query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where dateOfReturn = '" + dor + "' order by bookNo;";
                                          break;
                                   
                                   case 1:
                                          query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where dateOfReturn = '" + dor + "' order by bookName;";
                                          break;
                                   
                                   case 2:
                                          query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where dateOfReturn = '" + dor + "' order by memberNo;";
                                          break;
                                   
                                   case 3:
                                          query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where dateOfReturn = '" + dor + "' order by memberName;";
                                          break;
                                   
                                   case 4:
                                          query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where dateOfReturn = '" + dor + "' order by noOfCopies;";
                                          break;
                                   
                                   default:
                                          query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where dateOfReturn = '" + dor + "' order by dateOfReturn;";
                                          break;
                            }
                            
                            ResultSet rs = stmt.executeQuery(query);
                            
                            while (rs.next()){
                                   
                                   c = 1;
                                   model.addRow(new Object[] {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
                            }
                            
                            if (c != 1){
                                   
                                   JOptionPane.showMessageDialog(null, "No books were returned on this date.");
                            }
                            
                            rs.close();
                     }
                     else if (SearchTermBox.isEnabled() && !SearchTermBox.getText().equals("")){
                            
                            if (BookNameRadioButton.isSelected()){
                                   
                                   switch (index){
                                          
                                          case 0:
                                                 query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where bookName like '%%" + SearchTermBox.getText() + "%%' order by bookNo;";
                                                 break;
                                                 
                                          case 1:
                                                 query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where bookName like '%%" + SearchTermBox.getText() + "%%' order by bookName;";
                                                 break;
                                                 
                                          case 2:
                                                 query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where bookName like '%%" + SearchTermBox.getText() + "%%' order by memberNo;";
                                                 break;
                                                 
                                          case 3:
                                                 query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where bookName like '%%" + SearchTermBox.getText() + "%%' order by memberName;";
                                                 break;
                                                 
                                          case 4:
                                                 query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where bookName like '%%" + SearchTermBox.getText() + "%%' order by noOfCopies;";
                                                 break;
                                                 
                                          default:
                                                 query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where bookName like '%%" + SearchTermBox.getText() + "%%' order by dateOfReturn;";
                                                 break;            
                                   }
                                   
                            }
                            else{
                                   
                                   switch (index){
                                          
                                          case 0:
                                                 query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where memberName like '%%" + SearchTermBox.getText() + "%%' order by bookNo;";
                                                 break;
                                                 
                                          case 1:
                                                 query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where memberName like '%%" + SearchTermBox.getText() + "%%' order by bookName;";
                                                 break;
                                                 
                                          case 2:
                                                 query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where memberName like '%%" + SearchTermBox.getText() + "%%' order by memberNo;";
                                                 break;
                                                 
                                          case 3:
                                                 query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where memberName like '%%" + SearchTermBox.getText() + "%%' order by memberName;";
                                                 break;
                                                 
                                          case 4:
                                                 query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where memberName like '%%" + SearchTermBox.getText() + "%%' order by noOfCopies;";
                                                 break;
                                                 
                                          default:
                                                 query = "select bookNo, bookName, memberNo, memberName, DATE_FORMAT(dateOfReturn, '%d-%m-%Y'), noOfCopies from returns where memberName like '%%" + SearchTermBox.getText() + "%%' order by dateOfReturn;";
                                                 break;            
                                   }
                            }
                            
                            ResultSet rs = stmt.executeQuery(query);
                            
                            while (rs.next()){
                                   
                                   c = 1;
                                   model.addRow(new Object[] {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
                            }
                            
                            if (c != 1){
                                   JOptionPane.showMessageDialog(null, "No books were returned or the data entered has mistakes.");
                            }
                     }
                     else{
                            
                            if (!DateRadioButton.isSelected() && !BookNameRadioButton.isSelected() && !MemberNameRadioButton.isSelected()){
                                   
                                   JOptionPane.showMessageDialog(null, "Please select a radio button.");
                            }
                            else{
                                   
                                   JOptionPane.showMessageDialog(null, "Please enter a value in the box.");
                            }
                     }
                     
                     stmt.close();
                     con.close();
              }
              catch(Exception e){
                     
                     JOptionPane.showMessageDialog(null, "A database connection error occured.");
                     
                     
              }
       }//GEN-LAST:event_GetReturnsButtonActionPerformed

       private void BookNameRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookNameRadioButtonActionPerformed
              JRadioButton rb = (JRadioButton)evt.getSource();
              DefaultTableModel model = (DefaultTableModel)ResultTable.getModel();
              
              if (rb.isSelected()){
                     
                     DateLabel.setEnabled(false);
                     DateBox.setEnabled(false);
                     SearchTermLabel.setEnabled(true);
                     SearchTermBox.setEnabled(true);
                     
                     DateBox.setText("");
                     SearchTermBox.setText("");
                     
                     SearchTermBox.requestFocusInWindow();
                     
                     model.setRowCount(0);
                     SortByCombo.setSelectedIndex(0);
                     
              }
       }//GEN-LAST:event_BookNameRadioButtonActionPerformed

       private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
              DefaultTableModel model = (DefaultTableModel)ResultTable.getModel();
              
              DateBox.setText("");
              SearchTermBox.setText("");
              
              DateLabel.setEnabled(false);
              DateBox.setEnabled(false);
              SearchTermLabel.setEnabled(false);
              SearchTermBox.setEnabled(false);
              
              buttonGroup1.clearSelection();
              SortByCombo.setSelectedIndex(0);
              
              model.setRowCount(0);
              
       }//GEN-LAST:event_ClearButtonActionPerformed

       private void MenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuButtonActionPerformed
              this.setVisible(false);
              MainPage page = new MainPage();
              page.setVisible(true);
       }//GEN-LAST:event_MenuButtonActionPerformed

       private void DateBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DateBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     GetReturnsButton.doClick();
              }
       }//GEN-LAST:event_DateBoxKeyPressed

       private void SortByComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SortByComboKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     GetReturnsButton.doClick();
              }
       }//GEN-LAST:event_SortByComboKeyPressed

       private void SearchTermBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchTermBoxKeyPressed
              if (evt.getKeyCode() == KeyEvent.VK_ENTER){
                     
                     GetReturnsButton.doClick();
              }
       }//GEN-LAST:event_SearchTermBoxKeyPressed

       private void AddBookMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookMenuItem4ActionPerformed
              this.setVisible(false);
              AddBook books = new AddBook();
              books.setVisible(true);
       }//GEN-LAST:event_AddBookMenuItem4ActionPerformed

       private void AddMemberMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMemberMenuItem2ActionPerformed
              this.setVisible(false);
              AddMember member = new AddMember();
              member.setVisible(true);
       }//GEN-LAST:event_AddMemberMenuItem2ActionPerformed

       private void IssueBookMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueBookMenuItem2ActionPerformed
              this.setVisible(false);
              IssueBook issues = new IssueBook();
              issues.setVisible(true);
       }//GEN-LAST:event_IssueBookMenuItem2ActionPerformed

       private void ReturnBookMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnBookMenuItem2ActionPerformed
              this.setVisible(false);
              ReturnBook returns = new ReturnBook();
              returns.setVisible(true);
       }//GEN-LAST:event_ReturnBookMenuItem2ActionPerformed

       private void PurchaseBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseBookMenuItemActionPerformed
              this.setVisible(false);
              PurchaseBook purchase = new PurchaseBook();
              purchase.setVisible(true);
       }//GEN-LAST:event_PurchaseBookMenuItemActionPerformed

       private void SearchBookMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBookMenuItemActionPerformed
              this.setVisible(false);
              SearchBook search  = new SearchBook();
              search.setVisible(true);
       }//GEN-LAST:event_SearchBookMenuItemActionPerformed

       private void ViewIssuesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewIssuesMenuItemActionPerformed
              this.setVisible(false);
              ViewIssues issues = new ViewIssues();
              issues.setVisible(true);
       }//GEN-LAST:event_ViewIssuesMenuItemActionPerformed

       private void SearchMemberMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchMemberMenuItemActionPerformed
              this.setVisible(false);
              SearchMember search = new SearchMember();
              search.setVisible(true);
       }//GEN-LAST:event_SearchMemberMenuItemActionPerformed

       private void DeleteBookMenuButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBookMenuButton2ActionPerformed
              this.setVisible(false);
              DeleteBook deleteBook = new DeleteBook();
              deleteBook.setVisible(true);
       }//GEN-LAST:event_DeleteBookMenuButton2ActionPerformed

       private void DeleteMemberMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteMemberMenuItem2ActionPerformed
              this.setVisible(false);
              new DeleteMember().setVisible(true);
       }//GEN-LAST:event_DeleteMemberMenuItem2ActionPerformed

       private void EditBookMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBookMenuItem2ActionPerformed
              this.setVisible(false);
              new EditBook().setVisible(true);
       }//GEN-LAST:event_EditBookMenuItem2ActionPerformed

       private void EditMemberMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditMemberMenuItem2ActionPerformed
              this.setVisible(false);
              new EditMember().setVisible(true);
       }//GEN-LAST:event_EditMemberMenuItem2ActionPerformed

       private void ViewBooksMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBooksMenuItem2ActionPerformed
              this.setVisible(false);
              new ViewBooks().setVisible(true);
       }//GEN-LAST:event_ViewBooksMenuItem2ActionPerformed

       private void ViewMembersMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewMembersMenuItem2ActionPerformed
              this.setVisible(false);
              new ViewMembers().setVisible(true);
       }//GEN-LAST:event_ViewMembersMenuItem2ActionPerformed

       private void ExitMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuItem2ActionPerformed
              System.exit(0);
       }//GEN-LAST:event_ExitMenuItem2ActionPerformed

       private void ViewPurchasesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewPurchasesMenuItemActionPerformed
              this.setVisible(false);
              ViewPurchases purchase = new ViewPurchases();
              purchase.setVisible(true);
       }//GEN-LAST:event_ViewPurchasesMenuItemActionPerformed

       private void AboutUsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutUsMenuItemActionPerformed
              AboutUsPage page = new AboutUsPage();
              page.setVisible(true);
              page.setLocationRelativeTo(this);
       }//GEN-LAST:event_AboutUsMenuItemActionPerformed

       private void SortByComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByComboActionPerformed
              JComboBox cb = (JComboBox)evt.getSource();
              
              SearchTermBox.requestFocusInWindow();
              
              if (cb.getSelectedIndex() != -1 && !SearchTermBox.getText().equals("")){
                     
                     GetReturnsButton.doClick();
              }
              else if (cb.getSelectedIndex() != -1 && !DateBox.getText().equals("")){
                     
                     GetReturnsButton.doClick();
              }
       }//GEN-LAST:event_SortByComboActionPerformed

       /**
        * @param args the command line arguments
        */
       public static void main(String args[]) {
              /* Set the Nimbus look and feel */
              //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
              /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
               */
              try {
                     for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                            if ("Windows".equals(info.getName())) {
                                   javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                   break;
                            }
                     }
              } catch (ClassNotFoundException ex) {
                     java.util.logging.Logger.getLogger(ViewReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (InstantiationException ex) {
                     java.util.logging.Logger.getLogger(ViewReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (IllegalAccessException ex) {
                     java.util.logging.Logger.getLogger(ViewReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                     java.util.logging.Logger.getLogger(ViewReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
              }
              //</editor-fold>

              /* Create and display the form */
              java.awt.EventQueue.invokeLater(new Runnable() {
                     public void run() {
                            new ViewReturns().setVisible(true);
                     }
              });
       }

       // Variables declaration - do not modify//GEN-BEGIN:variables
       private javax.swing.JMenuItem AboutUsMenuItem;
       private javax.swing.JMenuItem AddBookMenuItem4;
       private javax.swing.JMenuItem AddMemberMenuItem2;
       private javax.swing.JRadioButton BookNameRadioButton;
       private javax.swing.JButton ClearButton;
       private javax.swing.JTextField DateBox;
       private javax.swing.JLabel DateLabel;
       private javax.swing.JRadioButton DateRadioButton;
       private javax.swing.JMenuItem DeleteBookMenuButton2;
       private javax.swing.JMenuItem DeleteMemberMenuItem2;
       private javax.swing.JMenuItem EditBookMenuItem2;
       private javax.swing.JMenuItem EditMemberMenuItem2;
       private javax.swing.JButton ExitButton;
       private javax.swing.JMenuItem ExitMenuItem2;
       private javax.swing.JButton GetReturnsButton;
       private javax.swing.JMenuItem IssueBookMenuItem2;
       private javax.swing.JRadioButton MemberNameRadioButton;
       private javax.swing.JButton MenuButton;
       private javax.swing.JMenuItem PurchaseBookMenuItem;
       private javax.swing.JTable ResultTable;
       private javax.swing.JMenuItem ReturnBookMenuItem2;
       private javax.swing.JMenuItem SearchBookMenuItem;
       private javax.swing.JMenuItem SearchMemberMenuItem;
       private javax.swing.JTextField SearchTermBox;
       private javax.swing.JLabel SearchTermLabel;
       private javax.swing.JMenuItem ShortcutsMenuItem;
       private javax.swing.JComboBox<String> SortByCombo;
       private javax.swing.JLabel SortByLabel;
       private javax.swing.JMenuItem ViewBooksMenuItem2;
       private javax.swing.JMenuItem ViewIssuesMenuItem;
       private javax.swing.JMenuItem ViewMembersMenuItem2;
       private javax.swing.JMenuItem ViewPurchasesMenuItem;
       private javax.swing.ButtonGroup buttonGroup1;
       private javax.swing.JLabel jLabel1;
       private javax.swing.JLabel jLabel2;
       private javax.swing.JMenu jMenu7;
       private javax.swing.JMenu jMenu8;
       private javax.swing.JMenuBar jMenuBar5;
       private javax.swing.JScrollPane jScrollPane1;
       private javax.swing.JPopupMenu.Separator jSeparator1;
       private javax.swing.JPopupMenu.Separator jSeparator19;
       private javax.swing.JPopupMenu.Separator jSeparator2;
       private javax.swing.JPopupMenu.Separator jSeparator21;
       private javax.swing.JPopupMenu.Separator jSeparator22;
       private javax.swing.JPopupMenu.Separator jSeparator24;
       private javax.swing.JPopupMenu.Separator jSeparator25;
       private javax.swing.JPopupMenu.Separator jSeparator26;
       private javax.swing.JPopupMenu.Separator jSeparator27;
       // End of variables declaration//GEN-END:variables

       private void SetIcon() {
              
              setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("appIcon.png")));
       }
}
